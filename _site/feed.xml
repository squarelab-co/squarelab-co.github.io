<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Square Lab</title>
    <description>새로운 시선으로 여행을 바라보는 사람들</description>
    <link>https://www.squarelab.co/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 15 May 2020 15:03:38 +0900</pubDate>
    <lastBuildDate>Fri, 15 May 2020 15:03:38 +0900</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>스퀘어랩 CEO를 만나다</title>
        <description>&lt;p&gt;요즘 떠오르는 회사의 뉴스 기사 볼 때, 그 회사 대표는 누구일까 궁금해하며 검색해 본 적 누구나 있을 텐데요. 입사 지원할 때 그 회사 대표의 인터뷰나 회사 소개 페이지를 꼼꼼히 읽어 내려간 경험도 분명히 있을 테고요. 이처럼, 어떤 회사의 면면을 가장 빠르고 정확하게 아는 방법은 바로 대표의 직접적인 말입니다. 한 회사의 나아갈 방향과 함께 공유하는 조직 문화에 대표의 생각과 고민이 가장 많이 담겼다고 해도 과언이 아닐 정도이니까요. 그래서 특별히 두 번째 인터뷰는 스퀘어랩의 CEO 이자, 모든 업무를 총괄하고 계신 도연 님과의 시간으로 꾸려보았습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;/images/post/interview-doyon/interview_doyon_1.jpg&quot; alt=&quot;인터뷰 김도연 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;간단한 자기소개 부탁 드립니다.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;네, 스퀘어랩 대표 김도연입니다. 1999년 첫 창업을 시작으로 꾸준히 스타트업에서 일해왔고 제가 정확하게 5번째로 창업한 회사가 ‘스퀘어랩’입니다. 첫 번째 스타트업은 1999년에 미국에서 시작한 인터넷 전화 시스템 회사였고 게임 회사, 인터넷 뉴스 서비스 회사 등을 연달아 창업했습니다. 20년 정도 스타트업에 몸 담다 보니 잠깐 외도했던 적도 있는데요. 네이버 밴드 미국 사업 부문장, 11번가 말레이시아 법인 개발∙상품 총괄을 담당하다 재작년에 다시 한국으로 돌아와 카이트로 시작해 스퀘어랩 서비스 전체를 맡게 되었습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;스퀘어랩이 다섯 번째 회사라고 하셨는데, 계속 스타트업을 도전하시는 이유가 있을까요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;스타트업을 선호한다기보다는 제가 하고 싶은 어떤 것을 하기 위한 수단이 스타트업이었던 것 같습니다. 스스로 원하는 것 혹은 하고 싶은 것이 있는데 시장에 존재하지 않을 땐 직접 도전해보는 스타일이다보니 자연스럽게 스타트업 분야에서 많은 시도를 해보게 된 것 같습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;국외에서 오래 생활하셨는데, 도연 님이 생각하시는 외국과 한국의 기업 문화의 가장 큰 차이점은 무엇일까요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;한국의 기업 문화에는 수직적 계층 구조가 여전히 존재한다는 점이 가장 큰 차이일 것 같습니다. 제가 주로 미국에서 일을 오래 해 와서 그런지 위아래라는 개념 자체를 중요하게 생각하지 않습니다. 나보다 선배 혹은 후배의 개념도 성립되지 않고 그저 모두를 함께 일하는 동료로 인식합니다. 그래서 실제로 저보다 선배인 회사 동료가 절 별로 좋아하지 않았던 것 같아요. (웃음) 개인적으로 수직적 계층 구조는 효율적인 업무 처리에 필요한 개념이 아니므로 최대한 수평적이고 자유로운 분위기를 만들기 위해 노력을 많이 하고 있습니다. 좋은 생각이나 기발한 아이디어가 위, 아래 구분해서 생기지는 않더라고요, 경험상. 일하고자 하는 의욕이나 소속감을 높일 방법을 위해 항상 고민합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;column-box&quot;&gt;
    &lt;img class=&quot;column-image&quot; src=&quot;/images/post/interview-doyon/interview_doyon_2.jpg&quot; alt=&quot;인터뷰 김도연 2&quot; /&gt;
    &lt;img class=&quot;column-image&quot; src=&quot;/images/post/interview-doyon/interview_doyon_3.jpg&quot; alt=&quot;인터뷰 김도연 3&quot; /&gt;
&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;
수평적 조직 구조를 지향하는 스퀘어랩은 실제로 40명이 넘는 팀원들 모두 직급 없이 각자의 역할과 책임에 맞는 업무를 진행하고 있다. 스퀘어랩의 직급을 가진 팀원은 대표인 도연 님이 유일하다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;이제 현재의 이야기로 좀 넘어가 보려고 합니다. 모두가 궁금해할 것 같습니다. 여행 서비스를 기획하게 된 이유가 있으신지요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;단순하게 제가 여행을 좋아합니다. 여행을 좋아하다 보니, 스스로 쓰기에도 편리한 기술 기반의 서비스를 만들고 싶었고요. 특히 당시 한국에는 기술 기반의 여행 서비스가 시장에 많이 없었기 때문에 다른 서비스와 경쟁력을 가질 수 있다고 생각했습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;일일이 나열하지 않아도 아주 많은 여행 회사 및 여행 서비스 플랫폼이 있는데요. 스퀘어랩의 차별점은 뭘까요 , 꼭 우리 서비스를 이용해야 한다 하는 특장점이 있을까요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;앞서 말씀드렸듯 스퀘어랩 만의 차별점은 ‘기술력’입니다. 개인마다 기술에 대한 정의는 모두 다를 텐데요. 저에게 기술이란 단순히 빠르고 편리한 것뿐만 아니라, 모호한 개념과 수많은 정보 속에서 나에게 가장 적합한, 나도 몰랐던 나의 요구를 파악해 답을 내어주는 것입니다. 여행에 접목해 보면, 어디로 갈지, 언제 갈지, 어디가 나에게 가장 맞는지에 대한 답을 내려줄 수 있는 것이 기술이고 그것을 스퀘어랩에서 가장 잘 실현해 줄 수 있다고 생각합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;
도연 님은 인터뷰 내내 기술력에 대해 강조하였습니다.&lt;/p&gt;

&lt;p class=&quot;quotes&quot;&gt;
&lt;i class=&quot;ri-double-quotes-l quote&quot;&gt;&lt;/i&gt;
여행은 유독 준비하는 단계에 너무 많은 시간과 공수가 듭니다. 여행은 힐링하고 다시 삶에 활력을 얻고자 하는 행위인데 준비만으로도 이미 지치고 힘들어지는 아이러니를 우리는 자주 느끼죠. 이런 단계를 스퀘어랩만이 지닌 기술력을 바탕으로 최대한 짧고 효율적으로 바꾸고 싶습니다. 그리고 결국엔 여행에 대한 사람들의 인식과 행태를 더 쉽고 간편하게 바꾸는 데까지 영향을 미치고 싶습니다.
&lt;i class=&quot;ri-double-quotes-r quote&quot;&gt;&lt;/i&gt;
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;유저에게 스퀘어랩이 어떤 여행서비스로 기억되길 원하시나요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;언젠가 여행을 가기 위해 꼭 써야 하는 도구라기 보다 일상과 연결된 서비스, 여행을 가지 않더라도 여행에 대한 꿈을 꾸게 하고 반추하게 해주는 서비스로 기억되고 싶습니다. 더 크게는 생활 일부가 되는 서비스가 되고 싶습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;얼마 전 좋은 소식이 있었죠. 스퀘어랩이 원티드 좋은 기업에 선정되었습니다. 소감이 궁금합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;팀원은 어떻게 생각할지 모르겠지만, 모두가 함께 일하고 싶은 회사가 되었으면 해서 노력했는데 그 부분에서 어느 정도 인정을 받은 것 같아 감사하게 생각합니다. 물론 제가 잘해서는 아니고, 스퀘어랩 구성원 모두가 한마음, 한뜻으로 본인의 조직이라고 생각하고 늘 열심히 해주었기 때문에 이런 좋은 평가도 받았다고 생각합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;/images/post/interview-doyon/interview_doyon_4.jpg&quot; alt=&quot;원티드 좋은 기업에 선정된 스퀘어랩&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;누구나 일하고 싶은 좋은 기업을 만들고 싶다고 하셨는데, 그러기 위해선 어떤 부분이 가장 중요하다고 생각하시나요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;중요한 건 ‘소통’이라고 생각합니다. 소통이라는 게 단순히 누군가의 이야기를 들어주고 공감하는 것에 그치는 것이 아니라 서로의 생각과 의견을 나누고 설득하고 이해하는 일련의 충분한 과정을 거쳐야 이뤄낼 수 있는 개념입니다. 단순히 해야만 해서 혹은 누군가가 하라고 해서 아닌, ‘왜’ 해야만 하는지에 대한 충분한 토론과 설득이 충족될 때 좋은 조직이 된다고 생각합니다. 그를 위한 가장 기본적이면서 중요한 요소가 바로 ‘소통’이죠.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;스퀘어랩은 재택근무, 자율출퇴근을 적극 시행하고 있는데, 대표로서 어려움은 없으신가요? 자율과 책임은 모든 대표님이 고민하는 사안이라고 생각되는데요.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;솔직하게 대표로서는 어려움이 없습니다만, 함께 일하는 동료에겐 어려움이 있을 수 있다고 생각합니다. 바로 논의해야 하는 일인데 상대방이 회사에 없거나, 원활한 소통을 나눌 수 없는 경우도 간혹 있을 수 있기 때문이죠.  이런 부분을 최대한 방지 하기 위해 정기적으로 팀원과 개인적인 시간을 갖거나 Peer Review (동료평가)를  진행하기도 합니다. 이런 부분만 미리 방지하고 팀원끼리 서로 상호합의만 된다면 ‘몇 시부터 몇 시까지 꼭 자리에 앉아 일을 해야 해’ 라는 생각은 큰 의미가 없어진다고 생각합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;br /&gt;
스퀘어랩은 2019년 5월 항공권 예약 서비스 &lt;a href=&quot;https://kyte.travel/&quot; target=&quot;_blank&quot;&gt;카이트&lt;/a&gt;와 항공권 특가알림 서비스인 &lt;a href=&quot;https://www.playwings.co.kr/&quot; target=&quot;_blank&quot;&gt;플레이윙즈&lt;/a&gt;가 합병하여 현재 지금의 모습을 갖추게 되었다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;카이트와 플레이윙즈, 서로 다른 두 회사를 하나의 스퀘어랩으로 만들 수 있었던 원동력은 무엇일까요? 어떤 부분을 가장 고민하셨는지 궁금합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;두 조직의 업무 프로세스, 소통 방식 등 서로 다른 부분이 많아 처음엔 쉽지 않았습니다. 그리고 지금도 약간의 어려움은 여전히 존재하고 있습니다. 둘 중 어떤 것이 좋다, 나쁘다를 떠나 서로 합의점을 찾고 팀원의 이해를 구하는 일을 가장 중요하게 생각했고 이 부분을 위해 많은 노력을 기울였습니다. 아무래도 제가 대표이다 보니 무언가에 의견을 내면 다른 분들이 부담을 느낄 수 있기 때문에 되도록 팀원의 이야기를 듣고 방향을 설정하려고 많은 시간을 쏟았습니다. 다행히도 두 회사 모두 의욕적이고 배려심있는 구성원이 모여 있다 보니 일련의 과정을 통해 스퀘어랩만의 문화가 빠르게 정착될 수 있었습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;/images/post/interview-doyon/interview_doyon_5.jpg&quot; alt=&quot;인터뷰 김도연 5&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;자연스럽게 채용 관련된 질문을 몇 개 이어가겠습니다. 뉴스나 신문에 심심치 않게 스타트업의 인력난이 심하다는 소식이 자주 실리는데, 스퀘어랩은 인재채용을 위해 노력하고 있는 사항들이 있을까요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;우선, 좋은 문화를 만들려고 계속 노력하고 있습니다. 그리고 회사를 알리려고 많은 액션을 하고 있고요. 스타트업이 사람을 뽑기 어려운 건, 해당 회사에 대한 정보가 부족해서라고 생각합니다. 아무리 좋아도 사람들이 모르면 존재하지 않는 것 처럼요. 우리 역시 스퀘어랩을 알리기 위해 회사 블로그도 만들고 PR이나 대외 활동에 최대한 참여하려고 합니다. 또한, 유연근무제나 여행 휴가 같은 좋은 복지나 혜택을 만드는데도 온 힘을 기울이고 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&quot;caption&quot;&gt;&lt;span&gt;여행 휴가&lt;/span&gt; 스퀘어랩은 입사 후, 만 1년이 지난 시점부터 매해 여행 휴가를 제공하는데 기본 연차와는 별도로 5개의 유급휴가가 추가로 주어진다.&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;스퀘어랩 팀원들은 대체로 어떤 경로를 통해 가장 많이 채용되나요? (원티드, 지인 추천, 전문헤드헌터 등)&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;헤드헌터보다는 &lt;a href=&quot;https://www.wanted.co.kr/company/2113&quot; target=&quot;_blank&quot;&gt;원티드&lt;/a&gt;나 &lt;a href=&quot;https://www.rocketpunch.com/companies/squarelab&quot; target=&quot;_blank&quot;&gt;로켓펀치&lt;/a&gt;로 채용이 더 많이 됩니다. 그리고 회사 차원에서도 그것을 원하기도 하고요. 해당 플랫폼을 이용한 분들은 본인의 의지를 바탕으로 입사 지원이 이뤄지다 보니 충분히 고민하고 회사에 대한 기본 내용을 알고 계시는 분들이 많습니다. 그러므로 기존의 팀원들과 더 잘 어우러지고 업무에도 빠르게 적응하시더라고요.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;최종 면접을 꼭 진행하는 걸로 알려졌는데, 채용 시 지원자의 어떤 부분을 가장 중요하게 보시나요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;저는 딱 한 가지만 유심히 봅니다. 기존 팀원들과 잘 어우러져 우리의 방향성을 따라 효율적으로 일할 수 있는 사람인가, 아닌가를 판단하려고 합니다. 그것 외에는 크게 고려하는 사항은 없습니다. 참고로 현업 담당자가 좋았다고 말씀주신 모든 분은 저희가 채용하였습니다. 바꿔 말하면 저의 의견이 아주 크게 반영되진 않는다는 거죠. (웃음) 함께 일할 분들이 좋다고 평가하시면 전 다 좋습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;아마 이 글을 스퀘어랩에 관심 있거나, 지원하고 싶은 분들이 보고 계실 텐데요. 스퀘어랩 일원이 되면 다른 건 몰라도 이건 보장한다! 싶은 사항이 있을까요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;음… 솔직히 말하겠습니다. 보장은 못 합니다. (웃음) 보장은 못 하지만 자신 있게 말씀드릴 수 있는 하나는  즐겁게 일할 수 있는 문화를 만들려고 항상 노력하고 있다는 점입니다. 이런 노력이 즐거운 문화까지 발전하여 완벽히 정착할 수 있을지는 모르겠으나 즐겁게 만들려는 노력은 계속될 것입니다. 저는 지금까지 참 즐겁고 유쾌하게 일해왔고 여전히 회사에 나오는 걸 참 좋아합니다. 이런 경험을 다른 사람들도 겪을 수 있게끔 돕고 싶습니다. 그러므로 제가 대표로 있는 동안엔 꾸준히 노력하려고 다짐하고 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;이제 스퀘어랩 인터뷰 공식 질문을 드리려고 합니다. 도연 님에게 이남장이란?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;아, 이남장은 제 마음의 고향입니다. 그냥 디폴트로 박혀 있는 것이라고 생각해주시면 됩니다. 사실 사람들이 하도 놀려서 요즘엔 한 달에 몇 번 정도 밖에 방문을 못합니다. 제가 가면 항상 아주머님이 반겨주셨는데 마음대로 가지 못해 아쉽습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;/images/post/interview-doyon/interview_doyon_6.jpg&quot; alt=&quot;을지로 이남장&quot; /&gt;&lt;/p&gt;
&lt;div class=&quot;caption&quot;&gt;&lt;span&gt;이남장&lt;/span&gt; 운영된 지 40년이 넘은 을지로 유명 설렁탕 집으로 스퀘어랩 사무실과 아주 가까이 위치해 있다. 도연 님의 최애 식당.&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;도연 님에게 여행이란?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;저에게 여행은 일상입니다. 앞서 말했 듯 여행이란 것이 뭔가 심각하게 고민하고 계획하는 대상이 아니었음 좋겠습니다. 그냥 내 생활의 일부로 가고 싶으면 훌쩍 떠날 수 있는 쉽고 간단한 존재이길 바랍니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;가장 기억에 남는 여행지가 있다면? 혹시 사업적인 아이디어를 얻은 여행지도 있다면, 추천 부탁합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;여행 가서 사업 생각은 거의 하지 않고 정말 푹 쉬는 편입니다. 가장 좋아하는 장소는 하와이입니다. 워낙 잘 알기도 하고 오랜 시간을 보냈기 때문에 집같은 편안함이 있습니다. 좋은 곳은 또 다시 가도 여전히 좋더라고요. 만일 하와이에서 길 잃으면 저에게 전화주세요. 어디든 다 훤히 꿰고 있으니까요. (웃음)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;/images/post/interview-doyon/interview_doyon_7.jpg&quot; alt=&quot;하와이 여행 중인 김도연&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;맺음말&quot;&gt;맺음말&lt;/h2&gt;

&lt;p&gt;간혹 스퀘어랩 대표인 도연 님을 처음 만나는 사람은 혼란스러움을 느끼기도 합니다. ‘젊고 활기찬 여행 서비스를 만드니 대표님도 굉장히 젊고 힙한 분일 거로 생각했어요.’ 라고 말하는 분들도 종종 계신대요, 도연 님과 잠깐이라도 대화를 나누면 바로 다시 생각을 바꾸게 됩니다.  ‘젊고 활기찬 여행 서비스를 만드니 대표님도 굉장히 젊고 힙한 분이시네요.’ 라고 말이죠. 샘솟는 아이디어와 개방적인 사고는 어느 20대 못지않으며 냉철한 판단력과 깊고 넓은 사업 지식은 경험 많은 대표의 모습을 온전히 내보이는, 아주 다양한 면모로 매력을 뽐내주는 스퀘어랩의 대표 도연 님을 만나본 시간이었습니다.&lt;br /&gt;&lt;br /&gt;
스퀘어랩 멤버 인터뷰는 앞으로도 계속됩니다.&lt;br /&gt;
그다음 주인공은 누구일지 많은 기대 부탁하면서 다음에 더 알찬 인터뷰로 찾아오겠습니다.&lt;/p&gt;
</description>
        <pubDate>Thu, 14 May 2020 00:00:00 +0900</pubDate>
        <link>/blog/interview-doyon/</link>
        <guid isPermaLink="true">/blog/interview-doyon/</guid>
        
        
        <category>Interview</category>
        
      </item>
    
      <item>
        <title>스퀘어랩, 원티드 좋은 기업에 선정되다</title>
        <description>&lt;p&gt;좋은 회사란 무엇일까요? 사회에 첫발을 떼는 순간부터 직장을 다니고 있는 지금에도 누구나 고민해볼 법한 질문입니다. 월급을 많이 준다든지, 탄탄한 복지를 제공한다든지, 안정적인 고용이 보장된다든지. 개인에 따라 좋은 회사의 기준은 무수히도 많고 다양할 텐데요. 우리가 생각하는 좋은 회사의 기준은 개개인을 인격체로서 존중해주며 인연을 소중히 여기고 명확한 목표와 이해 타당한 목적을 제시해주는 조직이라고 생각합니다. 이런 기준에서 스퀘어랩은 좋은 회사라 자부할 수 있는데요, 그 노력의 일환으로 얼마 전 스퀘어랩이 원티드에서 뽑은 좋은 기업에 선정되는 경사가 있었습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post/wanted/post1_wanted.jpg&quot; alt=&quot;원티드1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;원티드, 좋은 기업 선정 기준은 뭔가요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;원티드는 매달 두 가지 기준에 따라 ‘좋은 기업’을 선정하고 있습니다.  첫 번째는 서류∙면접 합격 여부에 대한 빠른 피드백, 두 번째는  좋은 면접 경험이었다는 지원자의 평가입니다. 이력서를 제출하고 하루하루 전전긍긍하면서 연락을 기다려 본 경험이 있는 분들이라면, 굉장히 합리적인 기준이라고 생각하실 텐데요. 스퀘어랩은 면접 과정에서 일방적인 구직자- 채용자 처지가 아닌, ‘상호 소통’의 형태를 지향하려고 합니다. 면접 중에도 서로의 PR을 통해 결과와 관계없이 지원자분들께 좋은 인상을 심어드리기 위해 애쓰는데 이런 노력의 결과로 원티드 좋은 기업에 선정될 수 있었습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;스퀘어랩, 어떻게 면접을 보나요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;스퀘어랩 면접은 서류전형 → 1차 면접  → 2차 면접 순으로 진행됩니다. 1차는 실무진 면접, 2차는 대표 면접으로 이루어져 있는데요, 수행할 업무에 따라 지원자를 심층적으로 파악하기 위해 유동적으로 면접관의 구성을 달리하기도 합니다. 그래서 때로는 1차를 대표 면접으로 진행하며 스퀘어랩 문화와 지원자가 잘 어우러지는지 확인하기도 합니다. 이때는 지원자가 자연스러운 분위기에서 깊은 대화를 나눌 수 있도록 격식 없는 커피나 식사를 곁들인 인터뷰를 진행하기도 합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p class=&quot;quotes&quot;&gt;
&lt;i class=&quot;ri-double-quotes-l quote&quot;&gt;&lt;/i&gt;
포트폴리오를 바탕으로 격식 없는 대화를 나누었습니다.&lt;br /&gt;
자유로운 분위기라 좋았고, 그런 분위기를 조성하고자 노력하시는 모습이 좋았습니다.
&lt;i class=&quot;ri-double-quotes-r quote&quot;&gt;&lt;/i&gt;  
&lt;p align=&quot;center&quot;&gt;스퀘어랩 실제 면접자 리뷰&lt;/p&gt;
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;video src=&quot;/images/post/wanted/wantedvideo.mp4&quot; width=&quot;100%&quot; controls=&quot;&quot; loop=&quot;&quot;&gt;&lt;/video&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;좋은 기업 선정된 하루, 어떻게 보냈나요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;좋은 기업에 선정되었다고 발표된 이후, 며칠이 지나자 스퀘어랩 사무실로 상패와 맛있는 슈가 크래프트 케이크가 도착하였습니다. 스퀘어랩 대표인 도연님과 수상의 1등 공신 HR 담당 브랜든님, 그리고 스퀘어랩만의 문화를 만들기 위해 노력한 모든 팀원이 모여 수상의 축하를 함께 나누었는데요, 소다 맛 케이크도 야무지게 나눠 먹으며 수상의 기쁨을 다 같이 누렸습니다. 🥳 🥳 🥳&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/images/post/wanted/post2_wanted.jpg&quot; alt=&quot;원티드3&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;스퀘어랩-함께-일해보지-않을래요&quot;&gt;스퀘어랩, 함께 일해보지 않을래요?&lt;/h2&gt;

&lt;p&gt;좋은 기업 스퀘어랩과 함께 일할 기회는 언제나 열려 있습니다. 현재 스퀘어랩은 다양한 직군의 역량 있는 분들을 모시기 위해 채용을 진행 중인데요. 개개인을 인격체로서 존중해주며 인연을 소중히 여기고 명확한 목표와 이해 타당한 목적을 제시해주는 스퀘어랩에서 함께 일해보는 건 어떠신가요? 관심이 마구마구 일지 않나요? 채용에 관련된 자세한 사항은 지금 바로 원티드에서 &lt;a href=&quot;https://www.wanted.co.kr/company/2113&quot;&gt;스퀘어랩 채용 공고 확인&lt;/a&gt;가능합니다. 좋은 기업을 더 좋게 만들어줄 팀원 분을 스퀘어랩은 언제나 두 팔 벌려 기다리고 있습니다.&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Apr 2020 00:00:00 +0900</pubDate>
        <link>/blog/wanted/</link>
        <guid isPermaLink="true">/blog/wanted/</guid>
        
        
        <category>News</category>
        
      </item>
    
      <item>
        <title>뉴욕 여행 취소기 (feat. 코로나19)</title>
        <description>&lt;p&gt;세달 전, 그러니까 2020년 1월 중순 즈음 설레는 마음으로 뉴욕행 비행기 티켓을 끊을 때만 해도 전혀 상상하지 못했습니다. 제가 뉴욕 여행 취소기를 쓰는 날이 올줄 말이죠.
그러나 여행 서비스를 만드는 스퀘어랩에 몸담고 있는 사람으로서 지금의 사태에 마냥 슬퍼하고 있을 수만은 없죠. 저처럼 여행을 취소한, 혹은 취소당한 모든 이들에게 심심한 위로가 되기를 바라며 나의 뉴욕 여행 취소 기록을 남기기로 했습니다. 아래 내용은 저의 취소 경험담을 일지 형식으로 재구성한 것입니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;2020년-1월-18일&quot;&gt;2020년 1월 18일&lt;/h2&gt;

&lt;p&gt;뉴욕행 항공권을 끊었다.
중국 베이징을 경유하는 에어차이나(중국국제항공)로 왕복 60만원이라는 아주 저렴한 금액에 티켓팅을 했다고 동네방네 자랑을 하고 다녔다.
여행 기간은 석가탄신일-근로자의 날의 콜라보로 완성된 황금연휴기간인 5월1일 부터 5월 15일까지. 2주간으로 잡았다.
봄날의 뉴욕이라니, 상상만으로도 행복했다.&lt;/p&gt;

&lt;p&gt;2020년의 여행지를 뉴욕으로 정했던 건 별다른 이유가 있는 건 아니었다.
미국이라는 나라에 가보고 싶었다. 너무나도 익숙한 나라이지만 정작 한번도 미국 땅을 밟아본 적은 없었기 때문이었고, 영화에서 보던 장소들에 실제로 가보면 지나가다가 연예인을 만난 것 같은 낯설은 익숙함이 느껴질 것 같았기 때문이었다.&lt;/p&gt;

&lt;p&gt;그런데 항공권을 결제하고 채 일주일도 지나지 않아 뉴스에 같은 단어가 자주 등장하기 시작했다. “우한”, “우한폐렴”.&lt;br /&gt;
그때까지만 해도 ‘어 나 중국 경유하는데… 에이 내 여행은 아직 4개월 반이나 남았으니까, 그 전까지 괜찮아지겠지’ 라고 생각했었다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;항목&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;지출&lt;/th&gt;
      &lt;th&gt;취소 수수료&lt;/th&gt;
      &lt;th&gt;돌려받은 돈&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;✈️ 항공권 (인천-뉴욕 / 에어차이나)&lt;/td&gt;
      &lt;td&gt;600,600원&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;600,600원&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2020년-1월-20일&quot;&gt;2020년 1월 20일&lt;/h2&gt;

&lt;p&gt;항공권을 결제했다는 것은 여행을 가겠다는 마음을 굳혔다는 의미였고, 가능한 모든 것을 예약해야 마음이 편안한 나는(나와 같은 분들은 공감할테지만) 엄청난 집중력을 발휘해 숙소 예약에 나섰다.
항공권과 숙소는 먼저 잡는 사람이 임자 아니겠는가. 시간이 넉넉하다고 한가롭게 있을 때가 아니었다.
게다가 관심가는 한가지에 꽂히면 밥도 안먹고 그것만 파헤치는 나의 성격 상(모든 것을 예약해야 마음이 편안한 사람은 보통 이런 집중력도 같이 가지고 있다) 이틀 만에 맨해튼에서의 숙소와 미국국내선, 암트랙(미국 기차)까지 예약을 완료해버리는 행동력을 보여주었다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;항목&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;지출&lt;/th&gt;
      &lt;th&gt;취소 수수료&lt;/th&gt;
      &lt;th&gt;돌려받은 돈&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;✈️ 항공권 (인천-뉴욕 / 에어차이나)&lt;/td&gt;
      &lt;td&gt;600,600원&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;✈️ 항공권 (워싱턴&amp;gt;버팔로/아메리칸에어)+(버팔로&amp;gt;뉴욕/델타항공)&lt;/td&gt;
      &lt;td&gt;285,200원(취소불가)&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;🏠 한인민박 (맨해튼)&lt;/td&gt;
      &lt;td&gt;844,800원&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;🏠 에어비앤비 (워싱턴)&lt;/td&gt;
      &lt;td&gt;168,898원&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;🏨 호텔 (나이아가라)&lt;/td&gt;
      &lt;td&gt;201,885원(취소불가)&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;🚂 암트랙 (뉴욕&amp;gt;워싱턴)&lt;/td&gt;
      &lt;td&gt;63,158원&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;2,164,541원&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2020년-1월-23일&quot;&gt;2020년 1월 23일&lt;/h2&gt;

&lt;p&gt;중국에서 폐렴이 퍼지는 속도가 심상치 않아 보였다.&lt;br /&gt;
내 중국 경유 항공권이 걱정되기 시작했다.&lt;/p&gt;

&lt;h2 id=&quot;2020년-1월-28일&quot;&gt;2020년 1월 28일&lt;/h2&gt;

&lt;p&gt;에어차이나 항공권을 환불하고 다른 항공편을 알아보기로 결심했다. 
이왕 다른 항공편을 끊는 거, 샌프란시스코를 레이오버 하는 유나이티드 항공을 타기로 했다.  저렴하게 구한 에어차이나를 포기하려니 속이 조금 쓰려왔지만 지금 돈이 대수인가. 역시 안전한것이 최고다. 라는 생각으로 마음을 바꾸게 된 것이다.
이틀 밤을 비행기에서 자야 하는 강행군이 될테지만 이참에 샌프란시스코도 가보고 잘되었다고 긍정적으로 생각하기로 했다.&lt;/p&gt;

&lt;p&gt;여행 정보 얻으려고 가입한 미국여행 카페에 미국 여행을 걱정하는 글을 올리게 될 줄이야 ㅠㅠ&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;border&quot; src=&quot;/images/post/cancel-newyork/cancel-newyork-1.jpg&quot; alt=&quot;미국여행 카페에 올린 글&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;항목&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;지출&lt;/th&gt;
      &lt;th&gt;취소 수수료&lt;/th&gt;
      &lt;th&gt;돌려받은 돈&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;span class=&quot;line-through&quot;&gt;✈️ 항공권 (인천-뉴욕 / 에어차이나)&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;&lt;span class=&quot;line-through&quot;&gt;600,600원&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;-10,000원&lt;/td&gt;
      &lt;td&gt;&lt;span class=&quot;line-through&quot;&gt;590,600원&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;✈️ 항공권 (인천-뉴욕 / 유나이티드항공)&lt;/td&gt;
      &lt;td&gt;967,600원&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;✈️ 항공권 (워싱턴&amp;gt;버팔로/아메리칸에어)+(버팔로&amp;gt;뉴욕/델타항공)&lt;/td&gt;
      &lt;td&gt;285,200원(취소불가)&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;🏠 한인민박 (맨해튼)&lt;/td&gt;
      &lt;td&gt;844,800원&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;🏠 에어비앤비 (워싱턴)&lt;/td&gt;
      &lt;td&gt;168,898원&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;🏨 호텔 (나이아가라)&lt;/td&gt;
      &lt;td&gt;201,885원(취소불가)&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;🚂 암트랙 (뉴욕&amp;gt;워싱턴)&lt;/td&gt;
      &lt;td&gt;63,158원&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;2,531,541원&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;span class=&quot;text-red&quot;&gt;-10,000원&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;span class=&quot;emphasis&quot;&gt;590,600원&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2020년-2월-5일&quot;&gt;2020년 2월 5일&lt;/h2&gt;

&lt;p&gt;유럽 등 여행지에서 동양인 혐오가 발생하고 있다는 기사를 봤다.
큰 돈과 많은 시간을 들여 떠나는 여행이건만, 여행지에서 험한 일을 당하게 될 수도 있다는 걱정이 들기 시작했다.
여행을 취소해야 하는 것인가 진지하게 고민하기 시작한 시점이 이때 즈음이었으나 취소불가로 예약한 예약건들과 취소수수료가 떠올라 쉽사리 결정 할 수가 없었다.&lt;/p&gt;

&lt;p&gt;여행을 갈 것인가 취소할 것인가.
지난 2주 동안 밥먹고 잠자고 일 하는 시간을 빼놓고 항상 이 고민이 머릿속을 꽉 채우고 있었다.
내가 다녀와서 코로나에 걸린다면, 나는 젊고 건강하니 나을 수 있더라도 우리 회사 사람들과 나와 마주쳤다는 이유만으로 격리당해야 하는 사람들에게 무슨 민폐를 끼치게 될 것인가를 생각하면 역시 취소해야 하는 것이 옳았다.
한가지 희망은 봄이 되고 날이 따뜻해지면서 코로나가 점점 사그라드는 것. 그것 뿐이었다.&lt;/p&gt;

&lt;h2 id=&quot;2020년-3월-1일&quot;&gt;2020년 3월 1일&lt;/h2&gt;

&lt;p&gt;미국이 한국의 대구, 경북 지역의 자국민 여행을 4단계로 격상시키면서 여행금지 지역으로 지정했다.
한국으로의 여행을 여행재고인 3단계로 변경한지 얼마 지나지 않아 내려진 조치였다. 한국인의 입국을 금지한 조치는 아니었으나 돌아가는 분위기가 심상치 않았다.&lt;br /&gt;
내가 새벽까지 기다려서 미국 대통령의 기자회견을 보게 될 줄이야.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;border&quot; src=&quot;/images/post/cancel-newyork/cancel-newyork-2.jpg&quot; alt=&quot;기사 캡처 - 출처: newsis&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2020년-3월-2일&quot;&gt;2020년 3월 2일&lt;/h2&gt;

&lt;p&gt;뉴욕에 확진자가 2명으로 늘었다. 해외여행력이 없는 남성이라 지역감염이 시작되는 것 아니냐는 우려가 돌기 시작했다(이 때 이미 시작이 되고 있었던 것이다).&lt;/p&gt;

&lt;p&gt;그리고 내 인천-뉴욕 항공권의 일정이 변경되었다. 미국 항공사들이 인천과 미국을 오가는 항공편을 대폭 축소시키기 시작하면서 내 일정에도 영향이 온 것이다. 그 때문에 원래 180,000원이던 내 항공권 취소 수수료는 1만원(발권 수수료)으로 줄어들게 되었다.
기뻐해야 하는지 슬퍼해야 하는지 감이 오지 않았다.&lt;/p&gt;

&lt;p&gt;항공권을 취소할 것인지 대체항공편을 찾아볼 것인지 또 다른 선택을 해야 했다.&lt;/p&gt;

&lt;h2 id=&quot;2020년-3월-7일&quot;&gt;2020년 3월 7일&lt;/h2&gt;

&lt;p&gt;여행을 취소하기로 결정했다.&lt;/p&gt;

&lt;p&gt;왜 하필 내가 미국 여행을 준비하는 이 시점에 전 세계적인 전염병이 유행을 하는 것인가.&lt;br /&gt;
파리 북역에서 사기를 당하고, 중국 공항에서 여권을 잃어버리고, 폭설 때문에 영국 경유가 취소되어 난데없이 홍콩 경유로 항공권이 바뀐 적은 있어도 전염병으로 여행이 취소되는 일은 전혀 예상하지 못한 상황이었다.&lt;br /&gt;
그러나 이런 일 또한 여행이 주는 수 많은 교훈 중 한가지라 생각하기로 했다. 이것도 한편의 Unexpected journey 아니겠는가.&lt;/p&gt;

&lt;p&gt;항공권 취소 수수료는 거의 없게 되었지만 취소불가로 예약한 미국 국내선 항공권과 나이아가라의 호텔은 아직 그대로 취소불가 상태였다.&lt;br /&gt;
미국여행 카페에는 취소불가건을 취소했다는 후기글들이 올라오기 시작했고, 동시에 나라를 팔아(?) 취소를 시도하는 몇몇 몰상식한 사람들의 사례가 기사화되기 시작했다(그르지 맙시다 증말루).&lt;/p&gt;

&lt;p&gt;한 푼이라도 건져야 한다는 생각에 뭐라도 해보기로 했다.&lt;br /&gt;
우선 나이아가라 호텔을 취소해줄 수 있는지 예약대행사에 문의를 해봤다. 전화 연결은 무척 오래걸렸지만 상담원은 친절했다.   예약대행사에서 호텔측으로 연락을 해볼테니 며칠 기다려달라는 답변을 듣고 두근대는 마음으로 기다리기를 며칠.&lt;br /&gt;
호텔측에 문의해보았으나 취소를 해줄 수 없다는 답변 메일을 받았다.&lt;br /&gt;
이대로 수십만원의 손해를 입게 되는 것인가..&lt;/p&gt;

&lt;p&gt;포기하지 말고 호텔측으로 직접 메일을 보내보기로 했다. 애초에 취소불가 상품을 예약한 것은 나였으나, 코로나가 퍼지고 내 의지와 상관없이 항공 스케쥴도 취소된 현재 상황을 호텔 측에서 이해해 줄지도 모른다는 희망을 안고.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;border&quot; src=&quot;/images/post/cancel-newyork/cancel-newyork-3.jpg&quot; alt=&quot;호텔로 보낸 메일&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2020년-3월-9일&quot;&gt;2020년 3월 9일&lt;/h2&gt;

&lt;p&gt;호텔측으로부터 답변이 왔다!&lt;br /&gt;
아주 심플하고도 친절하게 패널티 없는 취소를 해줄테니 예약대행사에 연락을 해보라는 내용이었다.&lt;br /&gt;
사랑해요!😭. 다음번 여행에 꼭 방문할게요!&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;border&quot; src=&quot;/images/post/cancel-newyork/cancel-newyork-4.jpg&quot; alt=&quot;호텔로부터 받은 답변&quot; /&gt;&lt;/p&gt;

&lt;p&gt;항공권과 취소불가 호텔을 무사히 취소하고 난 뒤에서야 취소가 가능한 그 외 항목들을 취소했다.&lt;br /&gt;
한인민박은 10%의 수수료를 공제했고, 취소가 불가능할줄 알았던 암트랙은 꽤 많은 수수료를 공제 하고 환불을 해주었다.&lt;br /&gt;
취소수수료로 쓰인 공제금은 총 124,438원, 취소불가인 미국 국내선 항공권이 285,200원으로 현재까지 이번 여행으로 손해 본 금액은 &lt;strong&gt;409,638원&lt;/strong&gt;이다.&lt;/p&gt;

&lt;p&gt;이 글을 쓰던 중 방금 미국 국내선 항공권을 예약한 예약대행사에 연락을 해봤지만 연결이 되지 않았다.&lt;br /&gt;
문의량 폭증으로 출발 7일 이내의 예약에 대해서만 상담을 진행하고 있다는 안내멘트를 끝으로 통화가 종료되었기 때문이다.&lt;br /&gt;
하지만 포기하지 말고 연락을 계속 시도해볼 생각이다. 미국 국내선 항공편도 현재 항공 스케쥴의 일부가 변경된 상태에 있기 때문에 적어도 크레딧으로라도 돌려받을 수 있다는 안내를 받았다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;항목&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;지출&lt;/th&gt;
      &lt;th&gt;취소 수수료&lt;/th&gt;
      &lt;th&gt;돌려받은 돈&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;span class=&quot;line-through&quot;&gt;✈️ 항공권 (인천-뉴욕 / 에어차이나)&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;&lt;span class=&quot;line-through&quot;&gt;600,600원&lt;/span&gt;&lt;/td&gt;
      &lt;td&gt;-10,000원&lt;/td&gt;
      &lt;td&gt;&lt;span class=&quot;line-through&quot;&gt;-590,600원&lt;/span&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;✈️ 항공권 (인천-뉴욕 / 유나이티드항공)&lt;/td&gt;
      &lt;td&gt;967,600원&lt;/td&gt;
      &lt;td&gt;-10,000원&lt;/td&gt;
      &lt;td&gt;957,600원&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;✈️ 항공권 (워싱턴&amp;gt;버팔로/아메리칸에어)+(버팔로&amp;gt;뉴욕/델타항공)&lt;/td&gt;
      &lt;td&gt;285,200원(취소불가)&lt;/td&gt;
      &lt;td&gt;-285,200원&lt;/td&gt;
      &lt;td&gt;0원&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;🏠 한인민박 (맨해튼)&lt;/td&gt;
      &lt;td&gt;844,800원&lt;/td&gt;
      &lt;td&gt;-84,480원 (10%)&lt;/td&gt;
      &lt;td&gt;760,320원&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;🏠 에어비앤비 (워싱턴)&lt;/td&gt;
      &lt;td&gt;168,898원&lt;/td&gt;
      &lt;td&gt;0원&lt;/td&gt;
      &lt;td&gt;168,898원&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;🏨 호텔 (나이아가라)&lt;/td&gt;
      &lt;td&gt;201,885원(취소불가)&lt;/td&gt;
      &lt;td&gt;0원&lt;/td&gt;
      &lt;td&gt;201,885원&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;🚂 암트랙 (뉴욕&amp;gt;워싱턴)&lt;/td&gt;
      &lt;td&gt;63,158원&lt;/td&gt;
      &lt;td&gt;-19,958원&lt;/td&gt;
      &lt;td&gt;43,200원&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;strong&gt;Total&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;2,531,541원&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;span class=&quot;text-red&quot;&gt;-409,638원&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;&lt;span class=&quot;emphasis&quot;&gt;2,121,903원&lt;/span&gt;&lt;/strong&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;맺음말&quot;&gt;맺음말&lt;/h2&gt;

&lt;p&gt;유례없는 비상사태 때문에 여행업을 비롯한 많은 업계에서 고통의 목소리를 내고 있습니다.&lt;br /&gt;
저도 물론 여행을 취소하게 되면서 금전적 손실를 보긴 했습니다만 지금 힘든 사람이 어디 저 혼자 뿐일까요. 이번 일로 힘든 시간을 보내는 중인 모든 사람들이 힘을 냈으면 하는 바람입니다.&lt;/p&gt;

&lt;p&gt;이번 여행으로 얻은 교훈도 있습니다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;모든 예약은 돈이 들더라도 취소가능예약으로 하자.&lt;/li&gt;
  &lt;li&gt;예상할 수 없는 일이 일어나는 것이 여행이고 그것을 해결하는 것이 바로 여행이 주는 교훈이다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이런 교훈을 얻은 것 만으로도 아주 손해는 아니라고, 그렇게 생각 하고 있습니다.&lt;/p&gt;

&lt;p&gt;그리고 조만간 새 식구가 생길 예정입니다.&lt;br /&gt;
원래는 뉴욕여행을 마치고 돌아와서 반려묘🐱를 맞을 예정에 있었는데, 여행이 취소되면서 그 시기가 좀 더 앞당겨지게 되었거든요.&lt;br /&gt;
4월 중순에 내게 올 새 식구의 이름은 브루클린2세, 줄여서 브이로 정했습니다. 이번 뉴욕여행 준비가 제게 남긴 교훈을 기억하자는 의미에서 말이죠.&lt;/p&gt;

</description>
        <pubDate>Tue, 14 Apr 2020 00:00:00 +0900</pubDate>
        <link>/blog/newyork-cancel/</link>
        <guid isPermaLink="true">/blog/newyork-cancel/</guid>
        
        
        <category>Travelog</category>
        
      </item>
    
      <item>
        <title>3,446km 밖에서 개발을 하다</title>
        <description>&lt;p&gt;스퀘어랩 사무실이 위치한 을지로와 치앙마이 간의 거리는 3,446km로 서울에서 제주도를 4번 가까이 왕복해야 비슷해질 수 있는 거리입니다. 갑작스러운 치앙마이 얘기에 뜬금없다고 생각하시는 분들이 있을 텐데요, 오늘은 이렇게 먼 치앙마이에서 스퀘어랩 플랫폼을 더욱 단단하고 풍성하게 만들기 위해 여념이 없는 개발자 한 분을 소개하고자 합니다. 스퀘어랩 서버 개발자 ‘영재’님을 만나보겠습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;간단한 자기소개 부탁 드립니다.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;안녕하세요, 현재 스퀘어랩에서 서버 개발을 맡은 권영재입니다. 스퀘어랩에 입사한 지는 1년 6개월 정도 되었네요. 저는 조인하게 된 이유가 좀 독특한데, 스퀘어랩이 만든 ‘카이트’ 앱을 일반 사용자로 사용하다 서비스가 마음에 들어서 개발자를 찾아봤더니 마침 제 후배가 있는 회사에서 만든 거였습니다. 그 일이 계기가 되어 몇 번 사무실에 놀러 가게 되었는데 자연스럽게 발목이 잡혔습니다. (웃음)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;영재님은 입사 때부터 장기 리모트로 일하신다고 들었는데, 지금까지 진행하셨던 장소를 소개해주실 수 있을까요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;네, 사실 원래 다니던 회사를 그만두고 아내와 같이 여기저기 여행하면서 개인 개발을 하려던 계획이 잡힌 상태에서 스퀘어랩에 조인을 하게 되었습니다. 그래서 입사할 때 부터 장기 리모트와 관련해서 충분한 논의를 진행했고 그 결과 지금까지 장기 리모트를 진행하고 있습니다. 작년 6월부터 미국 서부, 그랜드 캐니언 - 샌프란시스코 다녀왔고 9월엔 제주도에서 3개월, 12월 말에는 치앙마이로 옮겨서 올해 2월 초까지 있었습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;img src=&quot;/images/post/interview-yongjae/interview_YJK_1.jpg&quot; alt=&quot;인터뷰 권영재 1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;흔히, 원격 근무에 대한 ‘생산성 감소’라는 우려의 목소리도 존재하는데, 직접 경험자로서 어떻게 생각하시는지 궁금합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;사람마다 다를 것 같습니다. 저는 편한 옷 입고 편한 환경에서 일해야 업무 효율이나 퍼포먼스가 더 나는 사람이다 보니, 원격근무가 더 잘 맞습니다. 일단 출퇴근으로 인한 체력소모가 최소화 되기 때문에 좀 더 여유가 생기고, 개인적으로는 사무실보다도 조용한 집에서 코딩에 집중 할 수 있는 것 같습니다. 물론, 오프라인에서 만나 빠르게 얘기하고 결정해야 하는 이슈들도 있기 때문에 이런 부분은 사무실에 출근해서 일하는 것 보다는 효율이 좀 떨어지지만, 최대한 Jira나, Confluence 등의 협업 도구를 활용해 원활하게 의사소통이 이뤄지도록 더 노력하고 있습니다. 이런 협업 도구들은 대부분을 ‘글’이 매개체이다보니, 결국 원격 근무를 하면서도 커뮤니케이션에 문제가 없으려면 평소에 ‘글’ 을 통해서 사람들과 빠르고 정확하게 의사소통 할 수 있는 능력이 필수적이라고 생각합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;장기 리모트를 하면 업무 환경이 계속 달랐을 것 같은데, 집중력이나 업무 효율을 높이기 위해 가장 중요하게 생각했던 아이템은 무엇일까요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;무조건 호텔이나 숙소를 잡을 때, 책상과 의자가 있는 곳으로 잡았습니다. 아무리 가격이 비싸더라도요. 또, 장비도 중요해서 22인치 모니터나 키보드도 항상 차에 싣고 다니며 어디서든 업무를 할 수 있게 노력을 많이 기울였습니다. 심지어 제주도에 갈 때는 제가 가장 좋아하는 의자를 분해해서 차 뒷좌석에 실어 갔습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;column-box&quot;&gt;
    &lt;img class=&quot;column-image&quot; src=&quot;/images/post/interview-yongjae/interview_YJK_2.jpg&quot; alt=&quot;인터뷰 권영재 2&quot; /&gt;
    &lt;img class=&quot;column-image&quot; src=&quot;/images/post/interview-yongjae/interview_YJK_3.jpg&quot; alt=&quot;인터뷰 권영재 3&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;이제 업무에 관련한 부분을 좀 더 알아보고 싶은데요. 지금 가장 몰두하고 있는 Task는 무엇인가요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;현재 ‘카이트’에 차이(CHAI)라는 결제 시스템을 붙이는 업무를 하고 있습니다. 기존 항공권 결제 방식은 결제 정보를 항공사에 넘겨서 항공사가 결제를 진행하는 방식인데요, 이 방식은 저희 입장에서 수수료 부담은 적지만 다양한 결제방식을 지원하지 못하는 단점이 있습니다. 이 부분을 개선하고자 차이 또는 카카오페이와 같은 간편 결제 방식으로도 항공권 결제가 가능하도록 카이트 시스템을 개선중입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;종종 회사의 조직 문화가 중요하다는 얘기를 듣는데 개발자들 사이에도 개발 문화가 존재한다는 얘길 들은 적이 있습니다. 스퀘어랩에도 개발 문화가 존재하는지 궁금합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;네, 확실히 존재하고요. 스퀘어랩의 개발 문화를 가장 잘 느낄 수 있는 부분이 바로 ‘코드 리뷰’라고 생각합니다. 스퀘어랩 개발자들은 일상적으로 자유롭게 서로의 코드를 리뷰하고 피드백을 전달하는데요. 이런 과정을 통해 서로의 업무 퀄리티가 높아짐은 물론 다른 팀원의 업무를 더욱 잘 파악하고 인지할 수 있습니다. 누군가 부재하더라도 신속하고 정확하게 해당 업무를 대신할 힘도 여기서부터 시작되죠. &lt;span class=&quot;emphasis&quot;&gt;코드 리뷰는 단순 누군가의 것을 봐준다, 체크한다에 그치는 것이 아니라 더 유연하고 효과적이면서 함께 성장하는 개발 조직을 만드는 원동력이 된다고 생각합니다.&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
영재님은 인터뷰 내내 조직을 유연하게 만들고 업무 효율을 높이는 &lt;strong&gt;&lt;span&gt;코드 리뷰 문화&lt;/span&gt;&lt;/strong&gt;를 강조하였습니다.&lt;/p&gt;

&lt;p class=&quot;quotes&quot;&gt;
&lt;i class=&quot;ri-double-quotes-l quote&quot;&gt;&lt;/i&gt;
코드 리뷰는 업무에 가장 필요한 의사소통 역량을 습득하는데도 도움이 많이 됩니다. 스퀘어랩에서는 코드 리뷰 시, 지켜야 하는 가이드라인이 있는데요. 어떤 형식으로 어떻게 진행되어야 하는지부터 시작해서 어떤 어투로 진행해야 하는지에 대한 상세 부분까지 모두 정해져 있습니다. 실제 서로의 코드에 대해 리뷰할 때 상대방의 기분을 상하지 않게 하면서, 리뷰의 양도 조절하고 당사자가 이해할 수 있게 하려 노력합니다. 이런 노력은 전체적으로 불필요한 의사소통 공수를 줄이고 업무 외 복잡한 일들을 만들지 않아 더욱 건강한 조직 문화를 만드는데 도움이 되고 있습니다.
&lt;i class=&quot;ri-double-quotes-r quote&quot;&gt;&lt;/i&gt;
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;두 가지 질문을 함께 드리려고 합니다. 처음에 스퀘어랩을 선택한 이유가 무엇이었는지, 그리고 스퀘어랩에 조인하고 나서 처음에 선택한 이유가 그대로 유지 되었는지 궁금합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;앞서 말했듯 ‘카이트’라는 서비스가 아주 마음에 들었고 이런 서비스를 만드는데 동참하고 싶어서 조인하게 되었습니다. 제가 조인했을 땐 스퀘어랩이 작고 빠른 조직이었는데 점차 규모가 커짐에 따라 현재는 맡은 프로덕트도 늘고 회사 직원분들도 40여 분 정도로 많아졌는데요. 이렇게 더 다양하고 많은 사람과 만나고 업무를 하다 보니 스스로도 계속 성장하는 느낌이 듭니다. 다른 분들에게 자극받기도 하고 스스로 더 깨우치는 일도 있고. 끊임없이 성장하고 배울 수 있는 환경으로 변모해가는 점이 참 좋다고 생각합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;스퀘어랩에서 현재 사용하는 기술스택은 어떻게 되는지?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;서버쪽에서는 Node.js, Java, Kotlin, gRPC, vert.x, Elasticsearch, Docker, Kubernetes, MySQL, Redis, AWS 등을 사용하고 있고 클라이언트 쪽에서는 Typescript, React, React native, Swift, Kotlin 등을 사용하고 있습니다. 특히 서버는 모든 서비스가 처음부터 MSA(Micro Service Architecture)로 구성되었기 때문에 상황에 따라서 개발자들 간의 논의를 거쳐서 원하는 언어나 기술 등을 이용해 유연하게 개발할 수 있는 기반을 갖추고 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;div class=&quot;column-box&quot;&gt;
    &lt;img class=&quot;column-image&quot; src=&quot;/images/post/interview-yongjae/interview_YJK_4.jpg&quot; alt=&quot;인터뷰 권영재 4&quot; /&gt;
    &lt;img class=&quot;column-image&quot; src=&quot;/images/post/interview-yongjae/interview_YJK_5.jpg&quot; alt=&quot;인터뷰 권영재 5&quot; /&gt;
&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
영재님은 업무 외에도 코로나19 관련 실시간 상황을 알려주는 &lt;a href=&quot;https://coronaboard.kr/&quot; target=&quot;_blank&quot;&gt;웹사이트(https://coronaboard.kr/)&lt;/a&gt;를 개발하여 많은 이들이 코로나19 확산 상황을 신속하고 정확히 파악할 수 있게 많은 도움을 주고 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;border&quot; src=&quot;/images/post/interview-yongjae/interview_YJK_6.jpg&quot; alt=&quot;인터뷰 권영재 6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;코로나19 관련하여 직접 개발하신 상황판 웹사이트가 굉장히 화제가 되었습니다. 이 정도로 많은 분이 사용할 거라 예상하셨나요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;예상 못 했습니다. 아내와 제가 둘 다 개발자이다 보니 정확하지 않은, 정제되지 않은 데이터가 돌아다니는 것을 그대로 보지 못합니다. 게다가 모든 사람이 알아야 할 중요한 정보이기 때문에 저희가 정제해서 더 편리하고 간편하게 보여주자는 아쉬운 마음에 시작하게 되었습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;상황판을 만들면서 가장 중요하게 생각하거나 신경 쓰신 부분은 무엇인가요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;아까 언급했지만, 이 프로젝트의 시작도 데이터 검수였고, 지금도 데이터 검수가 가장 중요하다고 생각합니다. 워낙 많은 정보가 생겨나고, 그 안에서 검증되지 않은 정보까지 전달될 수 있어 확인하고 또 확인합니다. 그렇기 때문에 업데이트가 느려지기도 해 비난 문의를 종종 받기도 합니다. 하지만 전 세계적으로 피해가 심각하고, 예민하게 받아들여야 하는 상황이니 저나 아내도 정확하고, 신속하게 데이터를 검수하고 전달하려고 합니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;데이터가 실시간으로 바뀌고 워낙 수집해야 하는 정보의 양 자체가 많아 업무를 병행하며 웹사이트를 관리하기가 굉장히 힘들 것 같은데, 어떻게 시간을 할애하고 계시나요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;초반에 프로젝트 셋업이나 서버 구성을 제가 진행하고 아내가 프론트엔드 작업과 데이터 검증하는 업무를 진행했는데요. 철저하게 업무를 나눠 진행하다 보니 효율이 조금씩 더 오르더라고요. 그리고 참 고맙게도 매일 데이터 업데이트는 대부분 아내가 진행하고 있어서 저는 상대적으로 손쉽게 진행할 수 있었습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;평상시에도 업무 외에 다른 영역에 대한 아이디어가 많으신 편인가요? 코로나19 상황판 외에 다른 작업을 해보신 경험이 있다면 소개 부탁합니다.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;공익적인 프로젝트는 저도 처음이었는데, 이번 일을 진행하다 보니 공공데이터나 이런 것들이 정리 되지 않은 채 흩뿌려져 있는 경우가 많아서 안타까웠습니다. 앞으로 공공데이터를 재가공해서 사람들이 조금 더 손쉽게 쓸 수 있도록 도움이 되면 좋겠다라는 생각은 가지고 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
한편, 스퀘어랩은 역량 있는 개발자 채용을 꾸준히 진행하고 있는데 매니저로서 모든 면접에 참여하고 있는 영재님을 통해 스퀘어랩의 채용 방식과 원하는 팀원에 대한 이야기를 들어 볼 수도 있었습니다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;모든 개발자 채용 면접에 참석하시는데, 영재님이 생각하는 함께 일하고 싶은 동료는 어떤 분인지?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;일단 기본적인 개발 실력은 당연히 갖춰야 합니다. 여기서 조금 더 나아가 저희가 서비스를 만드는 회사이기 때문에 커뮤니케이션 능력을 상당히 중요하게 생각합니다. 서비스 개발이라는 것이 개발자 혼자서 개발을 잘한다고 성공할 수가 없습니다. 팀원들과 함께 사용자가 원하는 방향이 어떤 방향인지 끊임없이 논의하고 시행착오를 거쳐 가면서 만들어야 합니다. 그러기 위해서는 러프한 기획 사항이 있을 때 &lt;span class=&quot;emphasis&quot;&gt;먼저 개발자가 기획 의도를 잘 파악하고 문제 정의를 명확히 해줘야 합니다. 기획에서 빠진 부분이나 기술적으로 미리 고려되어야 할 부분이 있다면 피드백을 빠르게 요청해서 개선되도록 의사소통 해야 하는데 실제로 이렇게 문제를 정의하고 더 좋은 방향으로 개선하려고 노력하는 개발자분을 찾기가 쉽지는 않더라고요.&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;스퀘어랩 개발자 채용은 어떻게 진행되는지요?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;우선 제출한 핸드아웃을 기반으로 30분 정도 이야기를 나눕니다. 해당 개발을 하면서 어떤 고민을 했는지부터 기술 전반에 관한 질문 답변을 진행하고 이후에 30분 정도 코딩 면접을 진행합니다. 앞서 말했듯 서비스를 만드는 회사다 보니 수학적인 알고리즘같이 고난도 문제보다는 일반적인 실무에서 쓰는 개발 역량 위주로 평가가 이뤄집니다. 면접자분이 코드 초안을 작성해주시면 해당 내용을 기반으로 이런저런 이야기를 나눕니다. 왜 이렇게 작성했는지, 이런 방식은 고민해보았는지 등을요. 이 과정이 스퀘어랩에서 실제로 진행하고있는 코드 리뷰 과정과 동일하다고 보시면 됩니다. 처음엔 실수했더라도 여러 사람의 피드백을 통해 개선점을 스스로 찾아가는 분들이 계시는데 대체로 이런 분들이 채용되는 것 같습니다. (웃음) 이렇게 1차 면접을 마치고 대표님과 2차 면접을 진행하시면 최종 결과를 받아볼 수 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;
영재님은 채용 관련한 인터뷰를 진행하며 스퀘어랩에서 함께 일하게 된다면 이런 부분은 보장한다며 역량 있는 개발자분을 모시기 위한 셀프 PR을 진행하셨습니다.&lt;/p&gt;

&lt;p class=&quot;quotes&quot;&gt;
&lt;i class=&quot;ri-double-quotes-l quote&quot;&gt;&lt;/i&gt;앞서 말했듯 스퀘어랩은 코드 리뷰 문화가 정착되어있습니다. 다른 분들이 지금까지 개발하면서 쌓아왔던 지식을 시간을 내서 누군가에게 공유한다는 게 사실 말처럼 쉬운 일은 아닙니다. 하지만 코드 리뷰를 통해서 틈틈히 그런 지식들을 서로에게 공유 하고 논의해 볼 수 있게 됩니다. 이 과정에서 시니어 개발자는 주니어 개발자들에게 다양한 조언을 줄 수 있고, 주니어 개발자들은 그 나름대로 새로운 관점이나 방식을 제시할 수 있다보니 반대로 시니어 입장에서 새로운 것들을 깨닫게 되는 경우도 많이 있습니다. 그렇기 때문에 개발자로서의 의지와 노력만 있다면 스퀘어랩에서 다른 회사보다 2배는 더 빠르게 성장할 수 있다고 확실하게 말할 수 있습니다.
&lt;i class=&quot;ri-double-quotes-r quote&quot;&gt;&lt;/i&gt;
&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;이제 스퀘어랩 인터뷰 공식 질문을 드리려고 합니다. 영재님에게 &lt;code&gt;500 에러&lt;/code&gt;란?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;아. 빨리 컴퓨터 앞에 앉아서 고쳐야죠. (웃음) 500 에러는 자주 나진 않는데 그래도 종종 나는 편인 것 같습니다. 500에러나 500 에러에 준하는 에러는 제가 아니더라도 누군가는 빨리 확인해서 빨리 문제를 파악해야 합니다. 저희는 서로의 업무를 명확히 파악하고 있기 때문에 누구 한 명을 담당자로 지정하지 않고 문제를 발견한 사람이 먼저 처리하려고 노력하고 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;
&lt;strong&gt;영재님에게 여행이란?&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;여행은 새로운 경험을 하고, 새로운 걸 배울 수 있는 자극제라고 생각합니다. 저와 아내는 언어 배우는 것 역시 좋아하는데요. 되도록 그 나라에 방문하면 현지어 메뉴로 음식을 주문할 수 있도록 항상 공부하고 시도하는 즐거움이 있습니다. 이처럼 여행이라는 행위는 저를 계속 성장시키는 동력이 될 뿐만 아니라 인생을 더욱 새롭고 의미 있게 만드는 자극제입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;맺음말&quot;&gt;맺음말&lt;/h2&gt;

&lt;p&gt;스퀘어랩 서비스뿐만 아니라 공익을 위해서도 자신의 능력을 가감 없이 발휘하며, 뜨겁고 치열하게 몰두하는 스퀘어랩 서버 개발자 영재님을 만나보았습니다. 영재님 덕분에 앞으로 더 단단하고 알차게 변화될 스퀘어랩 서비스에 거는 기대가 점점 커지는 것 같습니다. 스퀘어랩 멤버 인터뷰는 앞으로도 계속됩니다. 그다음 주인공은 누구일지 많은 기대 부탁드리면서 다음에 더 알찬 인터뷰로 찾아오겠습니다.&lt;/p&gt;
</description>
        <pubDate>Mon, 06 Apr 2020 00:00:00 +0900</pubDate>
        <link>/blog/interview-youngjae/</link>
        <guid isPermaLink="true">/blog/interview-youngjae/</guid>
        
        
        <category>Interview</category>
        
      </item>
    
      <item>
        <title>Square Lab 굿즈 제작기</title>
        <description>&lt;p&gt;이전에 포스팅했던 &lt;a href=&quot;https://squarelab.co/blog/square-lab-branding/&quot;&gt;스퀘어랩 브랜딩 작업&lt;/a&gt;으로 우리의 아이덴티티와 BI를 정하고 나니 슬슬 여러 굿즈에 욕심이 났습니다. 깔끔하고 예뻐서 들고 다니고 싶은 굿즈는 자연스럽게 회사를 홍보하고 멤버들의 소속감을 높이는 좋은 양념이 된다고 생각했습니다. 우리는 그런 맛깔나는 양념을 만들고 싶었습니다.&lt;/p&gt;

&lt;h2 id=&quot;시작은-명함부터&quot;&gt;시작은 명함부터&lt;/h2&gt;

&lt;p&gt;명함은 회사의 첫인상을 보여주며 작지만 큰 영향력을 가지고 있습니다. 회사 관계자부터 신규 입사자까지 모두가 나를 처음 소개하기 위해 사용하는 것이니 스퀘어랩이 생각하는 디자인 방향을 잘 보여주어야 합니다. 브랜딩 과정에서 나온 확장의 개념을 명함에 반영해 로고 메타포를 명함 위 아래에 배치하고, 필요한 정보들을 그 안에 세로 형태로 구성했습니다. 깔끔하고 직관적인 디자인으로 우리 브랜딩 방향을 녹여낸 이 작은 카드는 스퀘어랩을 대표하는 이미지가 됐습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post/square-lab-goods/post1_namecard.png&quot; alt=&quot;post1_namecard.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;명함을 시작으로 여러 문서와 봉투, 일용할 우리의 스낵바까지 스퀘어랩 디자인을 입혔습니다. 포인트컬러를 절제하고 타이포에 강약을 주는 스타일을 스퀘어랩 곳곳에 적용했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post/square-lab-goods/post2_stationary.png&quot; alt=&quot;post2_stationary.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post/square-lab-goods/post3_snackbar.png&quot; alt=&quot;post3_stationary.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bound-for&quot;&gt;Bound for&lt;/h2&gt;

&lt;p&gt;사무적인 부분의 디자인이 끝나고 드디어 멤버 모두가 원했던 굿즈 제작에 들어갔습니다. 브랜딩 작업을 시작한다고 할 때부터 디자인팀을 만나는 모두가 한 번씩 물어본 “우리 뭐 만들어요?”의 “뭐”를 만들기 위해 브랜딩의 브랜딩이 필요했습니다. 다짜고짜 회사 굿즈라고 회사로고 똭 넣어버리면 멋이 없잖아요… 브랜딩 경험을 확장하고 굿즈 제작에 필요한 메타포를 위해 우리는 여행을 다녀오는 모두가 경험하고 이해할 수 있는 이륙 전 기내의 안내방송을 생각했습니다.&lt;/p&gt;

&lt;p&gt;“Ladies and gentlemen this is your captain speaking.”으로 시작하는 안내방송은 여행의 시작을 알리고, 여행을 가는 모두가 듣고 이해하며 설레는 순간을 만듭니다. 그안에 있는 &lt;strong&gt;Bound for[   ]&lt;/strong&gt;는 단어 그대로 목적지가 되기도 하고, 스퀘어랩이 추구하는 방향성을 담아내는 그릇이 됩니다. 여행을 떠나는 모두가 듣고 이해하는 이 경험을 우리 브랜딩 요소로 적용해 티셔츠, 집업후드, 에코백, 벳지들을 디자인했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post/square-lab-goods/post4_keycopy.png&quot; alt=&quot;post4_keycopy.png&quot; /&gt;
&lt;img src=&quot;/images/post/square-lab-goods/post5_ecoback.png&quot; alt=&quot;post5_ecoback.png&quot; /&gt;
&lt;img src=&quot;/images/post/square-lab-goods/post6_t_shirts.png&quot; alt=&quot;post6_t_shirts.png&quot; /&gt;
&lt;img src=&quot;/images/post/square-lab-goods/post7_hood.png&quot; alt=&quot;post7_hood.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;굿즈를 제작하면서 가장 신경 쓴 부분은 &lt;strong&gt;스퀘어랩에 소속감을 주지만 일상에서 들고 다니고 입고 다닐 수 있게 하자&lt;/strong&gt;였습니다. 이런 굿즈가 홍보 효과를 가지려면 우선 우리가 들고 다녀야 하고 그러려면 예뻐야 했습니다. 안 예쁘면 저부터가 안 들고 다닐 테니까요…&lt;/p&gt;

&lt;h2 id=&quot;여행휴가-회사-티로-티내기&quot;&gt;여행휴가 회사 티로 티내기&lt;/h2&gt;

&lt;p&gt;가장 처음 만들어졌고 멤버들이 가장 즐겨 입는 회사 티셔츠는 일반 버전과 함께 여행 휴가자를 위한 리미티드 에디션을 별도로 제작했습니다. 스퀘어랩은 여행 서비스를 만드는 스타트업인 만큼 일반휴가 이외에 추가로 5일간의 여행휴가를 지원하는데요. 멤버들이 미리 휴가지를 알려주면 도시 이름이 적힌 티셔츠를 만들어 제공합니다. 여행지를 미리 알려주는 것으로 휴가와 여행은 한 번 더 신나는 경험이 되고, 여행에서 찍은 멋진 인증사진을 통해 다른 멤버들은 나도 꼭 가겠다는 불꽃의지를 태웁니다. 아직 저도 못 입어 본 게 함정이지만 언젠가 꼭 입을 겁니다. 꼭.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post/square-lab-goods/post8_t_shirts_limited.png&quot; alt=&quot;post8_t_shirts_limited.png&quot; /&gt;
&lt;img src=&quot;/images/post/square-lab-goods/post9_lea.png&quot; alt=&quot;post9_lea.png&quot; /&gt;
&lt;img src=&quot;/images/post/square-lab-goods/post10_shally.png&quot; alt=&quot;post10_shally.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;우리가 스퀘어랩 디자인을 자주 사용하면, 자연스럽게 스퀘어랩이라는 브랜드를 이해하고 받아들일 수 있게 된다고 생각합니다. 스퀘어랩이 우리만의 브랜드 가치를 가지고 그 안에 속한 사람과 우리를 찾는 사용자들에게 녹아들 수 있게 브랜딩 과정은 계속되고 있습니다.&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Mar 2020 00:00:00 +0900</pubDate>
        <link>/blog/square-lab-goods/</link>
        <guid isPermaLink="true">/blog/square-lab-goods/</guid>
        
        
        <category>Design</category>
        
      </item>
    
      <item>
        <title>Google Apps Script를 활용한 Slack Bot 만들기</title>
        <description>&lt;p&gt;G Suite과 Slack은 스타트업에서 필수로 사용하는 서비스라 해도 과언이 아닙니다. G Suite의 다양한 기능과 쉽게 연동이 가능한 Google Apps Script로 Slack Bot을 만들면 반복작업을 자동화하고 업무효율을 높일 수 있습니다.
오늘은 Apps Script를 활용해 Slack Bot을 만드는 기본적인 내용을 공유하고자 합니다.&lt;/p&gt;

&lt;h3 id=&quot;google-apps-script&quot;&gt;Google Apps Script&lt;/h3&gt;
&lt;p&gt;우선 새로운 Apps Script 프로젝트를 만들어야 합니다. G suite 계정의 Google Drive에서 좌측 상단의 New(새로 만들기) 버튼으로 시작하세요.
&lt;img src=&quot;/images/post/how-to-make-a-slack-bot/google-drive-new.png&quot; alt=&quot;google-drive-new.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Apps Script가 만들어지면 아래 코드를 복사해 붙여넣기 합니다. Slack에서 인증을 받기 위한 내용인데 코드에 대한 설명은 Slack App 부분에서 하겠습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function doPost(e) {
    return ContentService.createTextOutput(JSON.parse(e.postData.contents).challenge);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/post/how-to-make-a-slack-bot/google-apps-script-new.png&quot; alt=&quot;google-apps-script-new.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;코드를 붙여넣기 했으면 메뉴 &amp;gt; Publish &amp;gt; Deploy as web app을 선택합니다. 이때 Slack이 Apps Script에 접근할 수 있도록 팝업 하단의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Who has access to the app&lt;/code&gt;의 값을 &lt;code class=&quot;highlighter-rouge&quot;&gt;Anyone, even anonymous&lt;/code&gt;로 선택하고 Deploy합니다.
&lt;img src=&quot;/images/post/how-to-make-a-slack-bot/google-apps-script-deploy.png&quot; alt=&quot;google-apps-script-deploy.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Deploy가 완료되면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Current web app URL&lt;/code&gt;이 표시됩니다. 곧 필요할테니 미리 복사해두세요.
&lt;img src=&quot;/images/post/how-to-make-a-slack-bot/google-apps-script-deployed.png&quot; alt=&quot;google-apps-script-deployed.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;slack-app&quot;&gt;Slack App&lt;/h3&gt;
&lt;p&gt;이제 Slack App을 만들 차례입니다. Slack API 사이트의 &lt;a href=&quot;https://api.slack.com/apps&quot;&gt;Your Apps&lt;/a&gt; 페이지에서 Create New App 버튼을 클릭하면 아래와 같은 팝업이 열립니다.
App에게 적당한 이름을 지어주고 연결할 Workspace를 선택하세요. App과 Bot의 용어가 혼란스러울 수 있는데 App의 기능 중 하나가 Bot이라고 이해하시면 됩니다.
&lt;img src=&quot;/images/post/how-to-make-a-slack-bot/slack-api-create-new-app.png&quot; alt=&quot;slack-api-create-new-app.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Slack App이 만들어지면 Basic Information 페이지로 이동됩니다. 이제 Slack App과 Apps Script를 연결할 차례입니다. Add features and functionality 섹션의 Event Subscriptions 버튼을 클릭하세요.
&lt;img src=&quot;/images/post/how-to-make-a-slack-bot/slack-api-basic-information.png&quot; alt=&quot;slack-api-basic-information.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Enable Events 스위치를 &lt;code class=&quot;highlighter-rouge&quot;&gt;On&lt;/code&gt;하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Request URL&lt;/code&gt;이 표시되는데 여기에 Apps Script에서 복사해두었던 &lt;code class=&quot;highlighter-rouge&quot;&gt;Current web app URL&lt;/code&gt;을 붙여넣기 하세요. 이제 눈치채셨겠지만 아까 작성한 코드는 Slack이 보내준 &lt;code class=&quot;highlighter-rouge&quot;&gt;challenge&lt;/code&gt; parameter를 다시 return해 인증을 받는 내용이었습니다.&lt;/p&gt;

&lt;p&gt;코드에 문제가 없고 Deploy도 정상적으로 되었다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Verified&lt;/code&gt;가 표시될 겁니다. 이제 Slack App이 추가된 채널에 메시지가 포스팅되면 Event를 수신할 수 있도록 Subscribe to bot events에 &lt;code class=&quot;highlighter-rouge&quot;&gt;message.channels&lt;/code&gt;를 추가하세요. 
&lt;img src=&quot;/images/post/how-to-make-a-slack-bot/slack-app-event-subscriptions.png&quot; alt=&quot;slack-app-event-subscriptions.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Basic Information으로 돌아와서 이번에는 Add features and functionality 섹션의 Permissions를 선택합니다.
&lt;img src=&quot;/images/post/how-to-make-a-slack-bot/slack-api-basic-information2.png&quot; alt=&quot;slack-api-basic-information2.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;이제 Slack App에게 적절한 권한을 주어야 할 차례입니다. OAuth &amp;amp; Permissions에서 스크롤을 내리면 Scopes 섹션을 찾을 수 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;channels:history&lt;/code&gt;는 먼저 등록한 Event 수신을 위한 필수 권한이라 이미 추가되어 있습니다.&lt;/p&gt;

&lt;p&gt;여러분이 만들 Bot 따라 다양한 권한이 필요하겠지만 일단 여기서는 제대로 동작하는지 확인할 용도로 &lt;code class=&quot;highlighter-rouge&quot;&gt;reactions:write&lt;/code&gt;만 추가했습니다.
&lt;img src=&quot;/images/post/how-to-make-a-slack-bot/slack-api-scopes.png&quot; alt=&quot;slack-api-scopes.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;다시 스크롤을 올려 Workspace에 App을 설치해야 합니다. Install App to Workspace 버튼을 클릭하면 Workspace에 App이 설치되고 Bot User OAuth Access Token을 얻게 됩니다. 이것도 곧 필요해질테니 일단 복사해두세요.
&lt;img src=&quot;/images/post/how-to-make-a-slack-bot/slack-api-install-app.png&quot; alt=&quot;slack-api-install-app.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;apps-script-업데이트-하기&quot;&gt;Apps Script 업데이트 하기&lt;/h3&gt;
&lt;p&gt;이쯤되면 뭔가 귀찮아지고 손가락은 command + W에 올라가 있겠지만 거의 다 끝났으니 포기하지 마세요. 다시 Apps Script로 돌아가 코드를 수정할게요. &lt;code class=&quot;highlighter-rouge&quot;&gt;challenge&lt;/code&gt; parameter를 return하던 코드는 더이상 필요하지 않으니 삭제하고 아래 내용으로 바꿔줍니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function doPost(e) {
  var token = &quot;xxxx-xxxxxxxxx-xxxx&quot;;
  var contents = JSON.parse(e.postData.contents);
  var option = {
    'method' : 'post',
    'payload' : {
      'token': token,
      'channel': contents.event.channel,
      'timestamp': contents.event.ts,
      'name': &quot;heavy_check_mark&quot;
    }
  };
  UrlFetchApp.fetch(&quot;https://slack.com/api/reactions.add&quot;, option);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Slack에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;message.channels&lt;/code&gt; Event가 수신되면 &lt;a href=&quot;https://api.slack.com/events/message.channels&quot;&gt;예제&lt;/a&gt;와 같이 데이터를 전달 받습니다.
Slack으로부터 받은 데이터에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;channel&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;timestamp&lt;/code&gt;를 사용해 해당 메시지에 체크 이모지를 달아주는 코드입니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;token&lt;/code&gt;에는 앞서 복사해두었던 &lt;code class=&quot;highlighter-rouge&quot;&gt;Bot User OAuth Access Token&lt;/code&gt; 값을 넣어주세요.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;모두 적용했으면 다시 Deploy 해야합니다. 팝업에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Project version&lt;/code&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;New&lt;/code&gt;로 선택하고 Update 버튼을 클릭합니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;UrlFetchApp&lt;/code&gt;을 사용했기 때문에 권한을 요청하는 팝업이 열릴텐데 흔쾌히 허용해주세요.
&lt;img src=&quot;/images/post/how-to-make-a-slack-bot/google-apps-script-update.png&quot; alt=&quot;google-apps-script-update.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;채널에-slack-app-추가하기&quot;&gt;채널에 Slack App 추가하기&lt;/h3&gt;
&lt;p&gt;드디어 Slack Bot이 잘 동작하는지 확인할 차례입니다. Slack으로 넘어와 방금 만든 App을 채널에 추가해 보겠습니다. 테스트 채널을 하나 만들고 우측의 Add App 버튼으로 방금 만든 App을 검색해 추가합니다.
&lt;img src=&quot;/images/post/how-to-make-a-slack-bot/slack-add-app.png&quot; alt=&quot;slack-add-app.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;자, 이제 테스트 채널에 메시지를 보내보세요. Slack Bot이 메시지를 확인하면 바로 체크 이모지를 붙여줄겁니다!
&lt;img src=&quot;/images/post/how-to-make-a-slack-bot/slack-add-reaction.png&quot; alt=&quot;slack-add-reaction.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;맺음말&quot;&gt;맺음말&lt;/h2&gt;
&lt;p&gt;Apps Script를 활용해 Slack Bot을 만드는 기본적인 내용은 여기까지입니다. 이제 여러분이 직접 필요한 Bot을 만들어 나가면 됩니다. 채널에 올라온 메시지의 내용은 &lt;code class=&quot;highlighter-rouge&quot;&gt;contents.event.text&lt;/code&gt;에 있으니 적절히 파싱해 필요한 작업을 수행하게 하세요.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;function doPost(e) {
  var token = &quot;xxxx-xxxxxxxxx-xxxx&quot;;
  var contents = JSON.parse(e.postData.contents);
  
  if (contents.event.text == &quot;something&quot;)
  {
     //Do something!
  }
  
  var option = {
    'method' : 'post',
    'payload' : {
      'token': token,
      'channel': contents.event.channel,
      'timestamp': contents.event.ts,
      'name': &quot;heavy_check_mark&quot;
    }
  };
  UrlFetchApp.fetch(&quot;https://slack.com/api/reactions.add&quot;, option);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;스퀘어랩에서도 여러 Slack Bot을 만들어 활용하고 있는데요. 휴가와 리모트 근무를 알리는 leave 채널에서는 Calendar Bot이 메시지를 파싱해 캘린더에 자동으로 일정을 추가해주고 jukebox 채널의 Music Bot은 사무실의 DJ로 활약하고 있습니다.&lt;/p&gt;

&lt;p&gt;Slack Bot을 직접 만들지 않더라도 &lt;a href=&quot;https://ifttt.com/&quot;&gt;IFTTT&lt;/a&gt;나 &lt;a href=&quot;https://zapier.com/home&quot;&gt;Zapier&lt;/a&gt;을 사용하는 방법도 있는데요. 이런 서비스들을 쓰는 것 보다 직접 만들었을 때의 장점은 자유도가 높고 고도화가 가능하다는 점입니다.
&lt;a href=&quot;https://developers.google.com/apps-script/api&quot;&gt;Apps Script API&lt;/a&gt;와 &lt;a href=&quot;https://api.slack.com/&quot;&gt;Slack API&lt;/a&gt;에서 어떤 것들이 가능한지 살펴보세요.&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Mar 2020 00:00:00 +0900</pubDate>
        <link>/blog/how-to-make-a-slack-bot/</link>
        <guid isPermaLink="true">/blog/how-to-make-a-slack-bot/</guid>
        
        
        <category>Engineering</category>
        
      </item>
    
      <item>
        <title>Square Lab 브랜딩 프로젝트</title>
        <description>&lt;p&gt;트렌디한 여행 서비스 &lt;a href=&quot;https://www.playwings.co.kr/about&quot;&gt;플레이윙즈&lt;/a&gt;와 &lt;a href=&quot;https://kyte.travel/&quot;&gt;카이트&lt;/a&gt;를 만드는 ‘스퀘어랩’. 우리만의 브랜드 아이덴티티가 필요했습니다. 단순한 로고 제작이 아닌 회사의 컬러를 만들어 갔던 스퀘어랩의 브랜딩 경험을 공유합니다.&lt;/p&gt;

&lt;h2 id=&quot;스퀘어랩-정의하기&quot;&gt;스퀘어랩 정의하기&lt;/h2&gt;

&lt;p&gt;“스퀘어랩은 무엇일까?”, “스퀘어랩은 무엇을 할까?” 브랜딩을 위해 모인 TFT 멤버들은 스퀘어랩의 모습을 만들기 전, 고민에 고민을 거쳐 하나하나 우리와 맞는 것들을 찾아 나갔습니다. 우리가 누군지를 알아야 우리에게 맞는 옷을 입을 수 있으니까요.&lt;/p&gt;

&lt;h3 id=&quot;여행을-가볍게-하는-사람들&quot;&gt;여행을 가볍게 하는 사람들&lt;/h3&gt;

&lt;p&gt;스퀘어랩의 서비스인 플레이윙즈, 카이트는 특가 항공권 알림, 일정에 맞는 여행지 추천 등으로 사용자가 언제든 가볍게 여행을 떠날 수 있게 합니다. 또한 스퀘어랩만의 기술로 사용자가 여행을 준비하고, 떠나는 모든 과정이 즐거울 수 있도록 합니다.&lt;/p&gt;

&lt;p&gt;여행에 대한 새로운 시각을 만들고, 경험이 확장될 수 있도록 하는 것. 그것이 바로 스퀘어랩이고, 스퀘어랩의 일이라고 정의했습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/post/square-lab-branding/post1_inspire.gif&quot; alt=&quot;post1_inspire.gif&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;스퀘어랩에는-어떤-사람들이-일하고-있을까&quot;&gt;스퀘어랩에는 어떤 사람들이 일하고 있을까?&lt;/h3&gt;

&lt;p&gt;스퀘어랩의 역할을 정한 후, 이제 “스퀘어랩 멤버는 무엇일까?”에 대해 고민했습니다. 결국 스퀘어랩의 색채를 만들어 가는 건 우리들이니까요. 우리는 어떻게 일하는 사람들인가, 우리가 만들어 내는 스퀘어랩의 모습은 어떤 모습이어야 할까, 고민 끝에 스퀘어랩의 브랜드 에센스를 세 가지로 정리했습니다&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Youthful:&lt;/strong&gt; 젊고 자유롭게 일하면서 여행의 트렌드를 빠르게 파악하고, 새로움을 받아들여 우리의 서비스에 녹아냅니다.&lt;br /&gt;
&lt;strong&gt;Professional:&lt;/strong&gt; 자유로움 속에서도 있는 분명한 책임으로 업무를 수행하는 전문가들입니다.&lt;br /&gt;
&lt;strong&gt;Expansion:&lt;/strong&gt; 주도적인 태도로 개인과 스퀘어랩을 다양한 영역에 확장합니다.&lt;/p&gt;

&lt;p&gt;젊은 감각과 전문적인 기술, 주도적인 자율과 책임으로 일하며 자신의 역량과 스퀘어랩을 함께 확장하는 사람들, 그것이 스퀘어랩이 갖고있는 우리만의 아이덴티티입니다.
&lt;img src=&quot;/images/post/square-lab-branding/post2_keyword.png&quot; alt=&quot;post2_keyword.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;왜-스퀘어랩일까&quot;&gt;왜 스퀘어랩일까?&lt;/h2&gt;

&lt;p&gt;그럼, 이제는 우리의 가치를 담아낸 메타포가 필요합니다. 직각으로 이뤄진 이 정사각 도형은 명확하고, 직관적이지만 얼마든지 기하학적으로 조형할 수 있습니다.
누구나 쉽게 접근할 수 있지만, 그 안에서 자기만의 멋을 가지는 것, 마치 자기만의 색채를 가지고 싶어 하는 젊은 트렌드와 닮아있습니다.
&lt;img src=&quot;/images/post/square-lab-branding/post3_square_shape.png&quot; alt=&quot;post3_square_shape.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;또한 스퀘어가 가지고 있는 ‘제곱’, ‘광장’이라는 다른 사전적 의미는 ‘가치의 확장과 성장’, ‘다양한 환경과 문화를 담아내는 공간’이 되고 이러한 개념들이 결국은 ‘전문적인 기술을 가진 집단’이라는 Lab과 합쳐져 Square Lab이 됐습니다.&lt;/p&gt;

&lt;h2 id=&quot;의미를-형태로-철학을-실체로&quot;&gt;의미를 형태로, 철학을 실체로&lt;/h2&gt;

&lt;p&gt;아이덴티티도 정하고 이름도 만들었으니 구체적인 스퀘어랩 형태를 만드는 인고의 시간(?)이 시작됐습니다. 모든 브랜딩 작업이 그러하듯 브랜딩 TFT는 스퀘어랩 BI 시안을 만들고, 또 만들고, 계속 만들었습니다. 스퀘어랩이 어떤 형태면 좋을지에 대한 설문과 내부 피드백을 통해 Logo Shape과 Typeface, Color를 정하고 발전시켜 스퀘어랩의 BI를 만들어 갔습니다.
&lt;img src=&quot;/images/post/square-lab-branding/post4_prototype.png&quot; alt=&quot;post4_prototype.png&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;여러 과정을 걸쳐 최종으로 완성된 BI는 아래와 같은 모습입니다. (만들어졌던 모든 시안에 안녕과 감사를…)이 안에 들어와 있는 요소들은 어떤 의도와 의미가 있는지 하나하나 뜯어보겠습니다.
&lt;img src=&quot;/images/post/square-lab-branding/post5_bi_Final.png&quot; alt=&quot;post5_bi_Final.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;1-logo-shape&quot;&gt;1. Logo Shape&lt;/h3&gt;

&lt;p&gt;로고를 구성하는 형태는 스퀘어로 잡았습니다. 우리는 스퀘어랩이니까요. 여기에 정사각형의 조형적인 형태에 확장성을 더하고 싶었습니다. 두 개의 꺽쇠 형태가 합쳐진 형태는 공간과 사용자를 이어주는 프레임 역할을 하고 나아가 공간의 확장, 사용자의 시각과 경험의 확장을 의미하게 됩니다.
&lt;img src=&quot;/images/post/square-lab-branding/post6_logo_shape.gif&quot; alt=&quot;post6_logo_shape.gif&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;2-typeface&quot;&gt;2. Typeface&lt;/h3&gt;
&lt;p&gt;스퀘어랩에 브랜딩 아이덴티티 안에 ‘Square Lab’이라는 문자는 명확하고 직관적일 필요가 있었습니다. 이를 위해 다양한 Typeface들을 테스트했지만 조금씩 부족한 어떤 것을 채울 수가 없어 직선과 정원으로 조형된 ‘Square Sans’를 제작했습니다. Square와 Lab 두 단어 사이에 볼륨을 다르게 구성해, 로고 형태에 조형미를 높였습니다.
&lt;img src=&quot;/images/post/square-lab-branding/post7_typeface.png&quot; alt=&quot;post7_typeface.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;3-color&quot;&gt;3. Color&lt;/h3&gt;

&lt;p&gt;로고의 형태와 Typeface가 직관적이고 명확했다면 여행이라는 키워드가 주는 감성적인 부분을 컬러로 채웠습니다. 해가 지는 절정의 순간을 모티브 한 보라색 그라디언트 컬러는 사용자의 깊은 경험과 감각적이면서 감성적인 톤앤매너를 가지게 합니다.
&lt;img src=&quot;/images/post/square-lab-branding/post8_color.jpg&quot; alt=&quot;post8_color.jpg&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;브랜드-확장-시키기&quot;&gt;브랜드 확장 시키기&lt;/h2&gt;

&lt;p&gt;스퀘어랩의 철학적 의미와 브랜드 컬러가 담긴 BI는 이렇게 탄생했습니다. BI를 통해 만들어진 Shape, Typeface, Color들이 단순히 BI를 위한 것이 아니라 스퀘어랩 브랜드 경험을 유기적으로 확장하는 메타포로 굿즈와 이미지들에 활용하고 있습니다. 여러 가지로 확장한 케이스들을 다음 포스팅에서 공유하도록 하겠습니다.
&lt;img src=&quot;/images/post/square-lab-branding/post9_goods.png&quot; alt=&quot;post9_goods.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;브랜딩 과정을 마치고 공식적으로 다양한 상황과 형태로 활용되는 것을 보고 나니, 제법 스퀘어랩이라는 브랜드가 그 안에 있는 우리들과 닮아가고 있다 생각이 드네요.&lt;/p&gt;

&lt;p&gt;스퀘어랩에 브랜딩 과정은 끝이 아니라 지금, 이 순간에도 우리가 만들어가는 과정 같습니다. 새롭거나 재미있게 만들어질 스퀘어랩을 계속 기대해주세요.&lt;/p&gt;
</description>
        <pubDate>Mon, 02 Mar 2020 00:00:00 +0900</pubDate>
        <link>/blog/square-lab-branding/</link>
        <guid isPermaLink="true">/blog/square-lab-branding/</guid>
        
        
        <category>Design</category>
        
      </item>
    
      <item>
        <title>Cloudinary를 활용한 이미지 컨텐츠 관리</title>
        <description>&lt;p&gt;새로운 서비스를 만들때 이미지 컨텐츠를 관리하는 것은 디자이너에게 매우 중요한 문제입니다. 디자인이 아무리 잘되어 있어도 컨텐츠가 적절한 퀄리티로 노출되지 않으면 디자인의 품질이 떨어져 보이고 사용자에게 신뢰감을 주기 어렵기 때문입니다.&lt;/p&gt;

&lt;p&gt;그렇다고 모든 이미지 컨텐츠를 하나하나 디자이너가 직접 관리하기에는 리소스가 너무 많이 들지요. 이 포스트에서는 스퀘어랩이 Cloudinary를 활용해 어떻게 이미지 컨텐츠를 관리하고 있는지 공유합니다.&lt;/p&gt;

&lt;h2 id=&quot;cloudinary-소개&quot;&gt;Cloudinary 소개&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://cloudinary.com/&quot;&gt;Cloudinary&lt;/a&gt;는 클라우드 기반의 이미지 및 비디오 관리 서비스입니다. 강력하면서 쉬운 API를 제공하고 있어 조금만 익숙해지면 컨텐츠를 매우 효율적으로 관리할 수 있습니다. 그리고 무엇보다 무료로 시작할 수 있어 스타트업에서 도입하기에 부담이 없습니다.&lt;/p&gt;

&lt;h3 id=&quot;데모-이미지&quot;&gt;데모 이미지&lt;/h3&gt;
&lt;p&gt;Cloudinary에 가입하고 이미지를 업로드 하는 것은 어렵지 않습니다. 일반적인 CDN이나 웹서버의 사용법과 유사하죠. 이미지를 업로드하면 고유한 URL을 얻을 수 있는데, 예제로 사용하기 위해 Cloudinary에서 데모로 제공하고 있는 이미지 중에서 고양이 사진을 하나 골라봤습니다. 고양이는 언제나 옳으니까요.
&lt;img src=&quot;https://res.cloudinary.com/demo/image/upload/sofa_cat.jpg&quot; alt=&quot;sofa_cat.jpg&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://res.cloudinary.com/demo/image/upload/sofa_cat.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;원본은 3940x2540 사이즈에 용량은 1.6MB인 고화질 이미지입니다. 일반적인 웹이나 앱 서비스에서 이런 고화질 이미지를 사용하는 경우는 거의 없습니다. 그래서 상황에 맞게 디자이너들이 직접 이미지를 리사이징하거나 CDN에서 API를 제공하는 경우 API를 통해 동적으로 리사이징해 사용합니다.&lt;/p&gt;

&lt;h3 id=&quot;이미지-리사이징&quot;&gt;이미지 리사이징&lt;/h3&gt;
&lt;p&gt;Cloudinary에서는 URL 파라미터를 통해 쉽게 이미지를 리사이징 할 수 있습니다. 바로 예제를 살펴볼까요.
&lt;img src=&quot;https://res.cloudinary.com/demo/image/upload/w_400/sofa_cat.jpg&quot; alt=&quot;sofa_cat.jpg&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://res.cloudinary.com/demo/image/upload/w_400/sofa_cat.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;크고 무거웠던 원본 이미지에서 400x258 사이즈에 용량은 25KB로 줄어든 이미지를 확인할 수 있습니다. URL에서 어떤 부분이 달라졌는지 눈치 채셨나요? &lt;code class=&quot;highlighter-rouge&quot;&gt;sofa_cat.jpg&lt;/code&gt; 앞에 &lt;code class=&quot;highlighter-rouge&quot;&gt;width=400&lt;/code&gt;을 의미하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;w_400&lt;/code&gt; 파라미터를 붙여 원본을 기준으로 비율에 맞게 가로 400px로 줄어든 이미지를 얻을 수 있습니다. CSS로 원본 이미지를 줄여서 표시한게 아니라 jpg 파일 자체의 사이즈와 용량이 줄어들었다는 점이 중요합니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/demo/image/upload/w_400,h_400/sofa_cat.jpg&quot; alt=&quot;sofa_cat.jpg&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://res.cloudinary.com/demo/image/upload/w_400,h_400/sofa_cat.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;물론 세로 사이즈도 원하는 대로 지정할 수 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;height=400&lt;/code&gt;을 의미하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;h_400&lt;/code&gt; 파라미터를 추가하면 위와 같이 이미지가 표시됩니다. 비율에 맞지 않는 사이즈를 입력했기 떄문에 이미지가 강제로 줄어들어 고양이가 좀 놀란 것 같네요.&lt;/p&gt;

&lt;h3 id=&quot;이미지-크롭핑&quot;&gt;이미지 크롭핑&lt;/h3&gt;
&lt;p&gt;원본 비율과 다른 사이즈가 필요할 때는 이미지가 왜곡되어 보이지 않도록 이미지를 크롭해야 합니다. Cloudinary에서는 리사이징과 마찬가지로 URL 파라미터를 통해 쉽게 이미지를 크롭할 수 있습니다.
&lt;img src=&quot;https://res.cloudinary.com/demo/image/upload/w_400,h_400,c_fill/sofa_cat.jpg&quot; alt=&quot;sofa_cat.jpg&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://res.cloudinary.com/demo/image/upload/w_400,h_400,c_fill/sofa_cat.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;crop to fill&lt;/code&gt;을 의미하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;c_fill&lt;/code&gt;이 추가되었습니다. 이제 이미지 왜곡없이 400x400으로 이미지를 표시할 수 있게 되었습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/demo/image/upload/w_400,ar_1:1,c_fill/sofa_cat.jpg&quot; alt=&quot;sofa_cat.jpg&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://res.cloudinary.com/demo/image/upload/w_400,ar_1:1,c_fill/sofa_cat.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;세로 길이를 지정하는 대신 비율을 직접 입력할 수도 있습니다. 1:1 비율로 표시하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;h_400&lt;/code&gt; 대신 &lt;code class=&quot;highlighter-rouge&quot;&gt;aspect ratio=1:1&lt;/code&gt;을 의미하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;ar_1:1&lt;/code&gt;을 사용해 볼까요? &lt;code class=&quot;highlighter-rouge&quot;&gt;h_400&lt;/code&gt;를 추가했을 때와 동일한 결과를 확인할 수 있습니다. &lt;code class=&quot;highlighter-rouge&quot;&gt;16:9&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;4:3&lt;/code&gt;등 원하는 비율대로 표시할 수 있지요.&lt;/p&gt;

&lt;h3 id=&quot;오브젝트-중심의-이미지-크롭핑&quot;&gt;오브젝트 중심의 이미지 크롭핑&lt;/h3&gt;
&lt;p&gt;하지만 계속 왼쪽으로 쏠려있는 고양이가 마음 쓰이셨죠? 파라미터를 하나 더 추가해서 이 문제를 해결할 수 있습니다.
&lt;img src=&quot;https://res.cloudinary.com/demo/image/upload/w_400,h_400,c_fill,g_auto/sofa_cat.jpg&quot; alt=&quot;sofa_cat.jpg&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://res.cloudinary.com/demo/image/upload/w_400,h_400,c_fill,g_auto/sofa_cat.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;이번에 추가된 파라미터는 &lt;code class=&quot;highlighter-rouge&quot;&gt;grtavity&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;auto&lt;/code&gt;로 적용하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;g_auto&lt;/code&gt;입니다. 직역하자면 &lt;code class=&quot;highlighter-rouge&quot;&gt;중력 자동 적용&lt;/code&gt; 정도로 해석할 수 있는데요. Cloudinary에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;grtavity&lt;/code&gt; 파라미터로 이미지에 포함된 얼굴이나 사물을 자동으로 인식해 오브젝트를 안정적으로 표시할 수 있는 기능을 제공하고 있습니다. 다양한 오브젝트가 포함된 이미지가 아니라면 인식률도 높아서 사용하는데 무리가 없습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/demo/image/upload/w_640,h_144,c_fill/sofa_cat.jpg&quot; alt=&quot;sofa_cat.jpg&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://res.cloudinary.com/demo/image/upload/w_640,h_144,c_fill/sofa_cat.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;한쪽으로 긴 사이즈의 이미지로 &lt;code class=&quot;highlighter-rouge&quot;&gt;grtavity&lt;/code&gt; 성능을 확인해 볼까요? 위 이미지 처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;g_auto&lt;/code&gt; 파라미터가 없으면 이미지의 가운데를 기준으로 크롭핑되어 고양이의 얼굴이 이미지 밖으로 벗어나고 맙니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/demo/image/upload/w_640,h_144,c_fill,g_auto/sofa_cat.jpg&quot; alt=&quot;sofa_cat.jpg&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://res.cloudinary.com/demo/image/upload/w_640,h_144,c_fill,g_auto/sofa_cat.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;g_auto&lt;/code&gt; 파라미터를 넣어주면 가로나 세로로 긴 사이즈의 이미지를 요청하더라도 오브젝트를 기준으로 크롭핑 되어 반가운 고양이의 얼굴을 볼 수 있습니다.&lt;/p&gt;

&lt;h3 id=&quot;이미지-최적화&quot;&gt;이미지 최적화&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/demo/image/upload/w_640,h_144,c_fill,g_auto,q_auto/sofa_cat.jpg&quot; alt=&quot;sofa_cat.jpg&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://res.cloudinary.com/demo/image/upload/w_640,h_144,c_fill,g_auto,q_auto/sofa_cat.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;마지막으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;quality=auto&lt;/code&gt;를 의미하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;q_auto&lt;/code&gt;를 추가해보겠습니다. Cloudinary의 설명에 따르면 이미지 용량과 비주얼 퀄리티 사이에서 최적의 밸런스를 찾아준다고 합니다.
&lt;code class=&quot;highlighter-rouge&quot;&gt;q_auto&lt;/code&gt;를 추가하기 전 이미지의 용량은 19KB였지만 추가한 후에는 7KB로 크게 줄었습니다. 매의 눈을 가진 분이라면 줄어든 용량 만큼 퀄리티가 다소 낮아진 것을 발견했겠지만 앞서의 설명대로 그렇게 크게 차이 나지는 않습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://res.cloudinary.com/demo/image/upload/w_640,h_144,c_fill,g_auto,q_auto:best/sofa_cat.jpg&quot; alt=&quot;sofa_cat.jpg&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://res.cloudinary.com/demo/image/upload/w_640,h_144,c_fill,g_auto,q_auto:best/sofa_cat.jpg
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;그럼에도 불구하고 더 나은 퀄리티를 원한다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;q_auto&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;best&lt;/code&gt; 옵션을 추가해 가장 좋은 퀄리티로 최적화할 수 있습니다. 용량은 10KB로 늘어났지만 조금 더 나아진 퀄리티를 확인할 수 있습니다.&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;맺음말&quot;&gt;맺음말&lt;/h3&gt;
&lt;p&gt;지금까지 예제와 함께 Cloudinary를 활용한 이미지 컨텐츠 관리에 대해 살펴보았습니다.&lt;/p&gt;

&lt;p&gt;스퀘어랩에서는 하나의 이미지를 여러 화면에서 다른 크기로 표시할 때, 배너 이미지를 다양한 사이즈로 제작할 때 Cloudinary를 적극 사용하고 있습니다. 이를 통해 디자이너들은 이미지를 리사이징하는 반복작업에서 벗어나 더 창조적인 업무에 집중할 수 있었습니다.&lt;/p&gt;

&lt;p&gt;Cloudinary에는 위에 언급 된 내용보다 더 많은 기능이 있으니 자세한 내용은 &lt;a href=&quot;https://cloudinary.com/documentation/image_transformations&quot;&gt;Get Started with Cloudinary&lt;/a&gt;를 참고하세요.&lt;/p&gt;
</description>
        <pubDate>Wed, 12 Feb 2020 00:00:00 +0900</pubDate>
        <link>/blog/get-started-with-cloudinary/</link>
        <guid isPermaLink="true">/blog/get-started-with-cloudinary/</guid>
        
        
        <category>Design</category>
        
      </item>
    
      <item>
        <title>Serverless한 회사 내부 서비스 만들기</title>
        <description>&lt;p&gt;사내에서 사용되는 서비스의 경우 대중을 대상으로 하지 않기 때문에 사용량이 많지 않은 경우가 대부분입니다. AWS Lambda를 사용하면 비용 절감뿐만 아니라 서버를 직접 관리하고 운영할 필요도 없기 때문에 안정적이고 편리합니다. Lambda에서는 warm up 전의 첫 호출시 응답이 느린 cold start 문제가 있긴하지만 오히려 사내 서비스의 경우 상대적으로 유저경험이 덜 중요하기때문에 cold start시에 잠깐 응답이 느려지는 것 정도는 큰 문제가 되지 않습니다.&lt;/p&gt;

&lt;p&gt;그렇다면 이제 실제로 serverless 형태로 회사 내부 서비스를 만들기 위해 어떻게 해야하는지 좀 더 깊은 고민을 해보도록 하겠습니다.&lt;/p&gt;

&lt;h2 id=&quot;serverless-framework-소개&quot;&gt;Serverless framework 소개&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/images/post/developing-internal-service-with-serverless-aws/serverless-framework.jpg&quot; alt=&quot;serverless-framework.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;AWS Lambda + AWS API Gateway를 이용하여 직접 서버 인스턴스를 띄우지 않고서도 서버 기능을 할 수 있다는 사실은 많이 알려져 있습니다. 하지만 막상 이걸 직접 설정 해보려고 하면 해야할 일이 산더미 같습니다. 실제 코드를 작성해서 Lambda에 업로드해야하고, Lambda를 누가 실행 할 수 있는지 적당한 권한을 설정해줘야 하며, API Gateway와 Lambda를 연결해줘야하고, 사용자 지정 도메인도 연결해줘야하며, CloudWatch 로그 설정도 … (중략). 슬슬 오히려 EC2 인스턴스를 그냥 띄워서 하던대로 하는게 낫지 않을까 생각이 들기 시작하네요.&lt;/p&gt;

&lt;p&gt;하지만 위와 같은 AWS 웹 콘솔을 통한 복잡하고 반복적인 설정/배포 과정 대신 &lt;a href=&quot;https://serverless.com/&quot;&gt;serverless framework&lt;/a&gt;를 사용하면 설정 파일 하나로 언제든지 손쉽게 환경 생성/재배포가 가능해지고 해당 설정 내용을 소스 저장소에 올려서 공유 및 변경 내용 추적까지 가능합니다.&lt;/p&gt;

&lt;p&gt;serverless framework CLI를 설치한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;serverless.yml&lt;/code&gt; 설정 파일을 만들고 &lt;code class=&quot;highlighter-rouge&quot;&gt;sls deploy&lt;/code&gt; 명령어만 실행하면 설정파일에 정의된 대로 자동으로 서비스 설정/배포가 완료됩니다. (설정 파일의 실제 내용이 궁금한 분들은 글 제일 아래쪽의 &lt;code class=&quot;highlighter-rouge&quot;&gt;serverless.yml&lt;/code&gt; 샘플 섹션을 참고)&lt;/p&gt;

&lt;p&gt;Serverless framework의 경우 내부적으로 AWS CloudFormation 기능을 이용하여 Lambda, API Gateway의 자잘한 설정들을 변경하게되는데, AWS 콘솔을 통해서 변경 가능한 설정 항목들은 serverless framework의 설정파일에서도 거의 지원하고있다고 보면 됩니다. (심지어 AWS뿐만아니라 Azure, Google Cloud 등의 다른 cloud provider도 지원)&lt;/p&gt;

&lt;p&gt;Serverless framework을 이용해서 골치아픈 인프라 설정 문제는 어느정도 해결되었으니, 어떻게하면 회사 내부 서비스에 적합한 구성을 할 수 있을지에 대해서 고민해 봐야할 차례입니다.&lt;/p&gt;

&lt;h2 id=&quot;api-gateway를-어떻게-설정할-것인가&quot;&gt;API Gateway를 어떻게 설정할 것인가?&lt;/h2&gt;

&lt;p&gt;API Gateway의 경우 원래 Public API만 제공되었는데 2018년 6월 이후로는 설정된 VPC에서만 접근가능하도록 할 수 있는 &lt;a href=&quot;https://aws.amazon.com/ko/blogs/compute/introducing-amazon-api-gateway-private-endpoints/&quot;&gt;Private API 기능&lt;/a&gt;이 새롭게 제공되기 시작했습니다.&lt;/p&gt;

&lt;p&gt;이 글에서는 AWS Lambda + API Gateway를 조합하여 사내 서비스들에 사용하기 적합한 형태인&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;VPC에서만 액세스 가능한 Private API를 만드는 방법&lt;/li&gt;
  &lt;li&gt;Public API 이지만 Gateway에 API 인증키를 추가해서 접근 제한을 하는 방법&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;두가지에 대해 각각 알아보려고 합니다.&lt;/p&gt;

&lt;p&gt;위 방법들을 설명하기 전에 먼저 API Gateway 엔드포인트 유형에따라 어떤 차이점들이 있는지를 먼저 정리해보면 다음과 같습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Edge (or Edge optimized)
    &lt;ul&gt;
      &lt;li&gt;CloudFront CDN&lt;/li&gt;
      &lt;li&gt;Public network에서 요청 &amp;gt; CloudFront &amp;gt; API Gateway &amp;gt; Lambda&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Regional
    &lt;ul&gt;
      &lt;li&gt;CDN없는 일반적인 public API&lt;/li&gt;
      &lt;li&gt;Public network에서 요청 &amp;gt; API Gateway &amp;gt; Lambda&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Private
    &lt;ul&gt;
      &lt;li&gt;엔드포인트를 생성한 VPC내에서만 접근 가능&lt;/li&gt;
      &lt;li&gt;Public network에서 요청 &amp;gt; 연결 불가&lt;/li&gt;
      &lt;li&gt;사용자 VPC내에서 요청 &amp;gt; VPC Endpoint &amp;gt; API Gateway &amp;gt; Lambda&lt;/li&gt;
      &lt;li&gt;주의: &lt;a href=&quot;https://stackoverflow.com/questions/56540149/how-do-i-define-a-custom-domain-name-for-my-amazon-api-gateway-api-with-private&quot;&gt;Private 엔드포인트는 API Gateway에 사용자 지정 도메인 (custom domain) 연결 불가&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;자신의 현재 Endpoint가 어떤 유형으로 설정 되어있는지 확인하려면 API Gateway의 메인 페이지에 방문해서 API목록 중에서 “엔드포인트 유형” 컬럼을 확인하면 됩니다.&lt;/p&gt;

&lt;h3 id=&quot;1-private-엔드포인트를-이용한-내부서비스-구성&quot;&gt;1. Private 엔드포인트를 이용한 내부서비스 구성&lt;/h3&gt;

&lt;p&gt;API Gateway는 AWS가 관리하는 서비스 (AWS fully-managed) 이기때문에 사용자의 VPC와는 다른 공간에 있습니다. 때문에 Private 형태로 Endpoint를 만들어 준 경우 API Gateway의 네트워크와 사용자의 VPC가 통신할 수 있도록 허용하는 설정이 필요합니다. “VPC Endpoint”가 바로 이 연결을 가능하게 해주는 설정입니다.&lt;/p&gt;

&lt;h4 id=&quot;vpc-endpoint-설정-하기&quot;&gt;VPC Endpoint 설정 하기&lt;/h4&gt;

&lt;p&gt;VPC &amp;gt; Endpoint 메뉴로 이동하면 엔드포인트를 추가 할 수 있습니다. 아래 순서대로 설정해 나가면 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;주의:&lt;/strong&gt; 이부분은 serverless.yaml에서 지원하지 않기때문에 AWS 콘솔을 통해서 진행해야함.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;VPC &amp;gt; API Gateway 연결
    &lt;ul&gt;
      &lt;li&gt;VPC Endpoint의 경우 API Gateway뿐만 아니라 AWS의 다른 관리형 서비스들에도 설정해서 사용하는 것이 가능하기때문에 다양한 서비스 목록들이 노출됩니다. API Gateway와 연결하기 위해서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;com.amazonaws.{REGION}.execute-api&lt;/code&gt; 을 찾아서 선택하면 됩니다.&lt;/li&gt;
      &lt;li&gt;ex) com.amazonaws.ap-northeast-1.execute-api&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;VPC 중 어떤 Subnet의 연결을 허용할지 설정
    &lt;ul&gt;
      &lt;li&gt;가용 영역별로 연결을 허용할 원하는 subnet을 선택하면 됩니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;프라이빗 DNS 이름 활성화
    &lt;ul&gt;
      &lt;li&gt;“프라이빗 DNS 이름 활성화” 가 되어있으면 기존 Public한 API Gateway &amp;gt; Lambda에서 액세스하던것과 동일한 형태의 URL로 VPC내에서 접근이 가능합니다.
        &lt;ul&gt;
          &lt;li&gt;URL 형식: https://{API_ID}.execute-api.{region}.amazonaws.com&lt;/li&gt;
          &lt;li&gt;ex) https://qb53b9muav2.execute-api.ap-northeast-1.amazonaws.com&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;주의&lt;/strong&gt;: 프라이빗 DNS를 활성화 된 엔드포인트 설정이 완료되면 해당 &lt;a href=&quot;https://aws.amazon.com/ko/premiumsupport/knowledge-center/api-gateway-vpc-connections/&quot;&gt;VPC에서 사용자 지정 도메인(custom domain)이 설정되지 않은 기존 Public(Edge/Regional) API Gateway로의 API 호출시 HTTP 403 Forbidden 이 발생&lt;/a&gt;합니다.
        &lt;ul&gt;
          &lt;li&gt;예를들어 VPC내에서 &lt;strong&gt;Regional 또는 Edge&lt;/strong&gt;로 설정된 API GW의 엔드포인트인 https://zl5b9muyr1.execute-api.ap-northeast-1.amazonaws.com/prod/example 로 요청시 403 Forbidden 발생&lt;/li&gt;
          &lt;li&gt;하지만 “API GW Console &amp;gt; 사용자 지정 도메인” 메뉴를 사용하여 위 엔드포인트를 사용자 지정 도메인에 연결 후, VPC내에서 사용자 지정 도메인을 이용한 주소 (https://myservice.com/example)로 요청시  오류가 발생하지 않음&lt;/li&gt;
          &lt;li&gt;따라서 기존에 Public하게 API Gateway를 사용하는 서비스가 있고, 해당 서비스를 VPC에서 내부에서 호출하고 있다면, VPC엔드포인트를 설정하기 전에 꼭 해당 서비스들에 사용자 지정 도메인을 연결 완료해야 문제가 없음&lt;/li&gt;
          &lt;li&gt;이런 현상이 발생하는 자세한 원인에 관해서는 &lt;a href=&quot;https://st-g.de/2019/07/be-careful-with-aws-private-api-gateway-endpoints&quot;&gt;여기&lt;/a&gt;를 참고하세요.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;보안그룹 설정 필요
    &lt;ul&gt;
      &lt;li&gt;VPC Endpoint &amp;gt; API Gateway로 전달되는 요청은 보통 HTTP 요청이니 inbound 443, 80 포트를 허용하는 보안그룹을 추가해 주면 됩니다. 별도로 다른 프로토콜이나 포트를 사용하고있다면 해당 포트를 허용하도록 설정해주면 됩니다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;주의&lt;/strong&gt;: VPC Endpoint의 경우 &lt;strong&gt;생성 후 사용하지 않더라도 계속 요금이 발생&lt;/strong&gt;합니다. 자세한 내용은 글 마지막의 “요금 분석” 섹션을 참고 하면 됩니다.&lt;/p&gt;

&lt;h4 id=&quot;api-gateway에서-api-생성-하기&quot;&gt;API Gateway에서 API 생성 하기&lt;/h4&gt;

&lt;p&gt;API Gateway 콘솔에서 API 생성시 REST API (Private) 으로 되어있는 것을 선택해서 생성하면 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;serverless.yml&lt;/code&gt;를 사용할 경우 provider.endpointType 항목을 &lt;code class=&quot;highlighter-rouge&quot;&gt;private&lt;/code&gt; 으로 설정하면 됩니다.&lt;/p&gt;

&lt;h4 id=&quot;특정-vpc에서만-접근되도록-설정&quot;&gt;특정 VPC에서만 접근되도록 설정&lt;/h4&gt;

&lt;p&gt;여러개의 VPC를 사용중인경우 그중 원하는 VPC에서만 Internal API가 호출되도록 허용하고 싶은 경우가 있습니다. 이경우 API Gateway의 리소스 정책 메뉴에서 “소스 VPC 화이트리스트” 버튼을 눌러 정책 템플릿을 로드한 후 원하는 vpcID만 넣어주면 됩니다. API GW의 경우 “리소스 정책” 설정 변경 후 항상 deploy를 눌러줘야 반영이 되니 주의가 필요합니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;serverless.yml&lt;/code&gt; 를 사용할 경우 provider.resourcePolicy에 해당 정책을 yaml형태로 넣어주면 됩니다.&lt;/p&gt;

&lt;h4 id=&quot;참고-1-vpn-연결을-통해서-vpc의-내부의-private-api-접근하기&quot;&gt;참고 1: VPN 연결을 통해서 VPC의 내부의 Private API 접근하기&lt;/h4&gt;

&lt;p&gt;위에서 살펴봤듯이 VPC Endpoint 설정시 프라이빗 DNS 이름을 활성화 한 경우 https://zl5b9muyr1.execute-api.ap-northeast-1.amazonaws.com 주소로 VPC 내부서버에서는 API call이 가능합니다. 아래처럼 VPC 내부 서버에서 nslookup을 수행하면 IP resolve가 잘 되는 것을 확인 할 수 있습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ubuntu@ec2-instance:/$ nslookup https://zl5b9muyr1.execute-api.ap-northeast-1.amazonaws.com
Server:    127.0.0.53
Address:  127.0.0.53#53

Non-authoritative answer:
https://zl5b9muyr1.execute-api.ap-northeast-1.amazonaws.com  canonical name = execute-api.ap-northeast-1.amazonaws.com.
Name:  execute-api.ap-northeast-1.amazonaws.com
Address: 172.31.86.18
Name:  execute-api.ap-northeast-1.amazonaws.com
Address: 172.31.2.179
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;비슷하게도 VPC내에 위치한 VPN 서버를 통해 VPN연결을 하게되면 VPC내부에 있는 것과 동일하게 간주되서 Private API를 호출하는 것이 가능해집니다. (반대로 말하면 VPN연결 없이는 개발자의 컴퓨터에서 Private API를 호출하는 것이 불가능합니다.)
VPN이 연결된 상태로 nslookup을 수행하면 별다른 설정 없이 위의 VPC내부의 서버에서처럼 동일하게 IP resolve가 잘 됩니다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://forums.aws.amazon.com/thread.jspa?threadID=161982&quot;&gt;AWS forum에 올라온 글&lt;/a&gt;을 보면 DNS forward를 별도로 설정하지 않으면 VPC DNS에 접근이 안된다고 나와있긴한데, 실제로 SoftEther VPN의 기본설정값으로 VPN연결 후에 사용했지만 VPC Private 도메인들도 resolve가 잘되는 것을 확인했습니다.&lt;/p&gt;

&lt;h4 id=&quot;참고-2-vpc의-private-dns-접근이-실패하는-경우-트러블-슈팅&quot;&gt;참고 2: VPC의 Private DNS 접근이 실패하는 경우 트러블 슈팅&lt;/h4&gt;

&lt;p&gt;혹시 VPN연결의 DNS 설정이 잘못된 경우 VPC내에 존재하는 VPN을 통해서 접근했는데도 DNS Resolve가 되지 않아서 접근이 불가능해지는 경우가 있습니다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yjiq150@local-pc:/$ nslookup zl5b9muyr1.execute-api.ap-northeast-1.amazonaws.com
Server:    8.8.8.8
Address:  8.8.8.8#53

** server can't find https://zl5b9muyr1.execute-api.ap-northeast-1.amazonaws.com: SERVFAIL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;VPN Client의 VPN (L2TP) 연결 설정에서 VPN 서버가 제공한 DNS 정보를 사용하지 않고 별도로 DNS 서버의 주소를 설정해서 DNS설정이 override된 경우 (ex: 8.8.8.8, 4.4.4.4 등의 구글에서 제공하는 DNS를 등록해 두는 경우가 존재) VPC의 private DNS쪽으로 DNS query 가 전달되지 않아서 IP resolve가 실패가 발생합니다.&lt;/p&gt;

&lt;p&gt;Mac 사용자라면 VPN에 연결된 상태로 경우 네트워크 설정(Network Preference) 메뉴에 들어가서 &lt;code class=&quot;highlighter-rouge&quot;&gt;VPN L2TP&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Advanced&lt;/code&gt; &amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;DNS&lt;/code&gt; 에 접근하여 수동으로 설정된 DNS 서버주소를 모두 삭제하면 문제가 해결됩니다.&lt;/p&gt;

&lt;h3 id=&quot;2-public-엔드포인트-endpoint를-이용한-내부-서비스-구성&quot;&gt;2. Public 엔드포인트 Endpoint를 이용한 내부 서비스 구성&lt;/h3&gt;

&lt;p&gt;내부에서만 사용하는 API라면 private 엔드포인트를 통해서도 사용하지만, 해당 API가 VPC내부에서도 호출되고 외부에서도 동시에 호출되어야 하는 경우도 종종 있는데 이 경우 private 엔드포인트만으로는 불편합니다.&lt;/p&gt;

&lt;p&gt;이 경우 API를 Public(Regional/Edge) 엔드포인트 형태로 생성한 후 다음과 같은 옵션들을 이용해서 접근 제어가 가능합니다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;API GW에 API Key를 생성하고, 해당 API Key를 넣어서 호출해야 접근 가능하도록 설정
    &lt;ul&gt;
      &lt;li&gt;method별로 다른 API Key를 설정 가능&lt;/li&gt;
      &lt;li&gt;하나의 method에 여러개의 다른 API key를 설정 가능&lt;/li&gt;
      &lt;li&gt;API key 별로 사용량 계획(usage plan)을 할당해서 과도한 호출 제한 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;단순 허용/비허용만 가능한 인증 외에 더 디테일한 권한 체크를 하려면 API GW에 권한부여자(custom authorizer)를 사용 필요
    &lt;ul&gt;
      &lt;li&gt;권한 체크용 Lambda 함수를 통해서 조건에따라 접근 허용할지 여부를 결정 가능&lt;/li&gt;
      &lt;li&gt;별도 Lambda 함수 구현 없이 AWS Cognito의 사용자 풀을 이용해서 가능&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;API GW의 리소스 정책(Resource Policy) 설정을 이용하면 IP기반으로도 whitelist/blacklist 액세스 컨트롤이 가능합니다. 하지만 VPC 내부에서 Public 엔드포인트를 호출하는 경우 API GW에 수신된 요청의 IP주소를 확인해 보면 해당 서버의 VPC 내의 private IP가 아닌 public IP 주소이기 때문에 VPC내의 private IP range를 이용한 액세스컨트롤은 불가능 합니다. 대신 개별 public IP를 각각 정확히 지정해야하는데, 동적으로 서버가 실행/종료되는 경우라서 IP가 계속 바뀌는 경우라면 설정이 어려워지는 문제가 있습니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; API key의 경우 secret에 속하기때문에 보통 소스 저장소에 포함시키지 않는 것이 best practice입니다. secret의 갯수들이 많아지게 되면 별도 파일로 관리하는 것이 편리합니다. serverless.yml 파일 안에 Lamda의 환경변수(env variable)로 들어갈 secret 값들이 소스 저장소에 포함되지 않도록 외부 파일로 빼는 방법은 &lt;a href=&quot;https://serverless-stack.com/chapters/ko/load-secrets-from-env-yml.html&quot;&gt;Load secrets from env.yml&lt;/a&gt;를 참고하세요.&lt;/p&gt;

&lt;h2 id=&quot;api-gatewaylambda-비용-분석-및-최적화&quot;&gt;API Gateway/Lambda 비용 분석 및 최적화&lt;/h2&gt;

&lt;p&gt;내부서비스를 serverless 형태로 로 기껏 만들어놨는데 직접 EC2 서버를 띄워서 만든것 보다 비용이 과도하게 비싸다면 그것또한 큰 문제이겠죠? 이부분이 궁금하신 분들을 위해서 어떻게하면 저렴하게 이용할 수 있고 대략적으로 비용이 얼마나 들지를 한번 분석해 보았습니다.&lt;/p&gt;

&lt;h3 id=&quot;1-api-gateway-비용&quot;&gt;1. API Gateway 비용&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/ko/api-gateway/pricing&quot;&gt;API GW 요금 페이지&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;아래 나오는 호출 비용과 VPC Endpoint 비용이 걱정된다면 API GW를 통하지 않고 Lambda를 직접 호출하는 방식을 사용하는 것이 낫습니다. 대신 직접 호출의 경우 일반적인 HTTP호출이 불가능하고 AWS SDK를 통해서만 호출해야하는 불편함이 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;호출-비용&quot;&gt;호출 비용&lt;/h4&gt;

&lt;p&gt;Public/Private API 무관하게 REST API 방식으로 설정된 GW의 경우 월 100만 Request당 $4.25 정도의 비용이 발생합니다. 만약 사내 서비스 용도로 사용해서 호출이 그리 많지 않다면 비용은 거의 무시 가능할 것으로 예상됩니다.&lt;/p&gt;

&lt;p&gt;기존 REST API 방식이 아닌 &lt;a href=&quot;https://aws.amazon.com/ko/blogs/compute/announcing-http-apis-for-amazon-api-gateway/&quot;&gt;2019년 12월에 새로 출시한 HTTP API 방식&lt;/a&gt;을 사용하면 100만 Request당 $1.29 로 더 저렴하게 사용할 수 있지만 아직 베타버전이고 지원하는 기능의 범위가 조금씩 다르니 잘 살펴보고 적용하면 좋을 것 같네요.&lt;/p&gt;

&lt;h4 id=&quot;private-api-사용을-위한-vpc-endpoint-비용&quot;&gt;Private API 사용을 위한 VPC Endpoint 비용&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/ko/api-gateway/pricing&quot;&gt;API GW 요금 페이지&lt;/a&gt;를 보면 아래와같은 내용이 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;프라이빗 API에 대한 데이터 전송 요금은 없습니다. 하지만 Amazon API Gateway에서 프라이빗 API를 사용하는 경우에는 AWS PrivateLink 요금이 적용됩니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;이에따라 API GW 요금과 별도로 VPC 엔드포인트를 생성한 순간 부터 Billing 내역 중 Virtual Private Cloud (VPC) 항목에 아래와같은 요금이 부과됩니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;$0.01 per GB Data Processed by VPC Endpoints&lt;/li&gt;
  &lt;li&gt;$0.014 per VPC Endpoint Hour&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;호출 양이 많지 않다면 데이터 전송요금은 부담이 없겠지만 VPC Endpoint가 생성되어있는 것 만으로도 한달에 10달러 정도가 소모되니 주의해야 할 부분 중에 하나입니다.&lt;/p&gt;

&lt;h4 id=&quot;사용량-계획usage-plan-적용을-통한-과도한-사용-방지&quot;&gt;사용량 계획(Usage Plan) 적용을 통한 과도한 사용 방지&lt;/h4&gt;

&lt;p&gt;API GW에서 &lt;a href=&quot;https://docs.aws.amazon.com/ko_kr/apigateway/latest/developerguide/api-gateway-request-throttling.html&quot;&gt;사용량 계획&lt;/a&gt;을 통해 스로틀(throttle)을 걸어두면 불필요하게 과도한 요청을 차단해서 비용을 절감할 수 있습니다. 스로틀은 토큰 버킷(Token Bucket) 알고리즘에 기반하여 동작하게 되는데, 사용량 계획의 두가지 설정 항목을 아래 처럼 생각 하면 이해하기 쉽습니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;버스트(Burst): 버킷의 크기&lt;/li&gt;
  &lt;li&gt;요율(Rate): 단위 시간당 버킷에 토큰이 채워지는 양&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[토큰 버킷 동작 방식]&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;API GW가 요청 하나를 처리할 때 마다 버킷안에 든 토큰을 하나 소모하게되고, 동시에 시간이 지남에따라 정해진 요율 만큼의 토큰이 다시 버킷에 채워집니다.&lt;/li&gt;
  &lt;li&gt;순간적으로 너무 요청이 많이 들어오는 경우 버킷안에 토큰이 모두 소모되게되고 토큰 소진 이후에 발생하는 요청들은 429 Too many Request 오류로 처리됩니다.&lt;/li&gt;
  &lt;li&gt;토큰이 소진되었어도 시간이 지나 요율에 따라 토큰이 채워지는 즉시, 신규 요청들을 정상적으로 처리합니다. (채워진 토큰의 양보다 신규 요청들이 많을경우 또 429 오류 발생 가능)&lt;/li&gt;
  &lt;li&gt;요청이 거의 없어서 버킷 안에 토큰이 가득차더라도 버킷 크기(=버스트) 이상으로 토큰이 늘어나지는 않습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-lambda-비용&quot;&gt;2. Lambda 비용&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/ko/lambda/pricing/&quot;&gt;Lambda 요금 페이지&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lambda의 경우 월 100만번 호출, 실행소요시간 400,000 GB-초 까지는 프리티어 여부와 무관하게 항상 무료로 사용가능합니다.&lt;/p&gt;

&lt;p&gt;여기서 &lt;code class=&quot;highlighter-rouge&quot;&gt;GB-초&lt;/code&gt; 라는 단위가 재미있는데, 1GB-초 는 최대 1GB(1024MB)의 메모리를 사용하도록 설정된 Lambda 함수가 1초동안 실행된다는 의미입니다. 따라서 동일하게 1초동안 실행된 Lambda 함수여도 메모리 사용량이 512MB로 설정되어있었다면 0.5초 GB-초 만큼을 사용한 것으로 볼 수 있습니다.&lt;/p&gt;

&lt;h4 id=&quot;lambda-실행-소요시간-최적화&quot;&gt;Lambda 실행 소요시간 최적화&lt;/h4&gt;
&lt;p&gt;Lambda 요금페이지를 보면 아래와같은 내용이 있습니다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;AWS Lambda 리소스 모델에서 함수에 사용할 메모리 양을 선택하면 이에 비례하여 CPU 용량과 기타 리소스가 할당됩니다. 메모리 크기가 증가하면 함수에 사용할 수 있는 CPU도 그만큼 증가하게 됩니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;즉, Lambda 함수가 512MB의 메모리만 필요로 하더라도 CPU 사용량이 많은 작업을 수행하는 경우 오히려 실행 시간이 1024MB를 할당한 경우보다 2배이상 늘어나 버릴 수 있다는 이야기 입니다. 이런경우 비용을 줄이기 위해 메모리 사용량을 줄였지만, CPU 타임을 할당받지 못하여 오히려 실행 시간이 늘어나서 &lt;code class=&quot;highlighter-rouge&quot;&gt;GB-초&lt;/code&gt; 관점에서 봤을 때는 비용 효율이 떨어지게 되는 현상이 발생 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;GB-초&lt;/code&gt; 비용 최적화를 위해 실제 호출을 처리할 때 사용한 메모리의 양과 요금 부과 시간(Billed Duration) 을 확인하고싶다면 &lt;code class=&quot;highlighter-rouge&quot;&gt;AWS Lambda &amp;gt; 함수 선택 &amp;gt; 모니터링 탭 선택 &lt;/code&gt; 으로 진입하여 Recent Invocations 섹션을 보시면 됩니다.&lt;/p&gt;

&lt;p&gt;메모리 할당량을 조정하면서 함수가 수행될 때의 요금 부과시간을 확인하면 자신의 함수에 맞는 최적값을 찾아낼 수 있을것이고 이를 통해 비용을 절약하는 것이 가능하니 시간날 때 열심히 최적화를 해보는 것도 좋을 것 같네요.&lt;/p&gt;

&lt;p&gt;Lambda에서의 메모리 할당량과 CPU 리소스 관계에 관한 좀더 자세한 내용은 &lt;a href=&quot;https://engineering.opsgenie.com/how-does-proportional-cpu-allocation-work-with-aws-lambda-41cd44da3cac&quot;&gt;여기를 참고&lt;/a&gt;하시면 됩니다.&lt;/p&gt;

&lt;h2 id=&quot;faq&quot;&gt;FAQ&lt;/h2&gt;

&lt;p&gt;AWS의 수 많은 서비스들과 설정값들을 보면 어떤 서비스를 어떻게 연결하다 보면 질문이 꼬리에 꼬리를 물고 생겨나는 것을 느껴본적이 있으실 것 같습니다. 제가 실제 사내 서비스를 배포하면서 생겼던 의문점들을 Q&amp;amp;A 형식으로 몇가지 정리해보았습니다.&lt;/p&gt;

&lt;h4 id=&quot;public-엔드포인트와-연결된-lambda-내부-코드에서-private-엔드포인트에-연결된-lambda를-호출하면-어떻게되나요&quot;&gt;Public 엔드포인트와 연결된 Lambda 내부 코드에서 Private 엔드포인트에 연결된 Lambda를 호출하면 어떻게되나요?&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;getaddrinfo ENOTFOUND 0pylfo8d60.execute-api.ap-northeast-1.amazonaws.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 DNS resolve 에러가 발생하면서 호출이 불가능 합니다.
대신 Lambda 안에서 해당 사용중인 언어의 AWS SDK를 import하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;lambda.invoke&lt;/code&gt; 메서드를 사용하면 Lambda를 직접 호출하는 것은 가능하니 필요하다면 이 방법을 사용하면 됩니다.&lt;/p&gt;

&lt;h4 id=&quot;private-엔드포인트에는-사용자-지정-도메인custom-domain을-연결-할-수-있을까요&quot;&gt;Private 엔드포인트에는 사용자 지정 도메인(custom domain)을 연결 할 수 있을까요?&lt;/h4&gt;

&lt;p&gt;2020년 1월 현재 AWS API Gateway에서는 지원해 주지 않는다. 꼭 필요한 경우 간단하진 않지만 아래와 같은 방식으로 해결이 가능합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;VPC내부에 Reverse proxy server를 둬서 해당 proxy에 custom domain을 연결 한 후 proxy로 들어온 요청을 Private 엔드포인트로 포워딩 하는 방법&lt;/li&gt;
  &lt;li&gt;VPC내부 서버에 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; 파일을 조작하거나 &lt;code class=&quot;highlighter-rouge&quot;&gt;dnsmasq&lt;/code&gt;를 이용해서 custom domain이 Private 엔트포인트에 해당하는 주소로 resolve 되도록 하는 방법&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;api-gw를-연결하지-않고-lambda를-실행이-가능한가요&quot;&gt;API GW를 연결하지 않고 Lambda를 실행이 가능한가요?&lt;/h4&gt;

&lt;p&gt;위에서도 언급했듯이 AWS SDK를 통해서 Lambda를 직접 호출할 수 있습니다. 하지만 일반적인 HTTP client를 통해 Lambda 함수를 실행하려면 API GW가 필수적입니다.&lt;/p&gt;

&lt;h4 id=&quot;lambda를-특정-vpc-컨텍스트-내에서-실행-가능한가요&quot;&gt;Lambda를 특정 VPC 컨텍스트 내에서 실행 가능한가요?&lt;/h4&gt;

&lt;p&gt;Lambda에서 VPC 내에서만 접근가능하도록 설정된 다른 AWS 서비스 (ex: EC2, RDS, ElastiCache 등)를 이용하려면
특정 VPC 에서 동작하도록 별도의 설정이 필요합니다. Serverless framework을 사용하는 경우 다음 &lt;a href=&quot;https://serverless.com/framework/docs/providers/aws/guide/functions#vpc-configuration&quot;&gt;VPC Configuration&lt;/a&gt;부분을 읽어봐 주세요.&lt;/p&gt;

&lt;h2 id=&quot;serverlessyml-sample&quot;&gt;Serverless.yml Sample&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://serverless.com/framework/docs/providers/aws/guide/serverless.yml/&quot;&gt;Serverless.yml Reference for AWS&lt;/a&gt; 문서를 보면 serverless framework을 이용하여 AWS 서비스들을 설정 할 수 있는 모든 파라미터들이 명시되어 있습니다. 필요한 설정이 있다면 여기를 제일 먼저 찾아보면 됩니다.&lt;/p&gt;

&lt;p&gt;모든 설정을 하나씩 검토하는 수고를 줄이기 위해 일단 스퀘어랩의 내부 서비스를 개발할때 사용했던 &lt;code class=&quot;highlighter-rouge&quot;&gt;serverless.yml&lt;/code&gt; 파일의 일부를 샘플로 공개하니 참고하세요.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# app and org for use with dashboard.serverless.com
app: general
org: squarelab

service: noticontrol

frameworkVersion: &quot;=1.60.1&quot;

plugins:
  - serverless-domain-manager # API GW 사용자 지정 도메인을 쉽게 설정할 수 있게 해주는 플러그인
custom:
  # Refer to https://serverless.com/blog/serverless-api-gateway-domain/
  # Checkout results: https://ap-northeast-1.console.aws.amazon.com/apigateway/home?region=ap-northeast-1#/custom-domain-names
  customDomain:
    domainName: ${self:service}.squarelab.co
    basePath: ''
    endpointType: regional
    stage: ${opt:stage}
    createRoute53Record: true

  # Load secrets from env.yml file (NOT included in repo)
  environment: ${file(env.yml)}

provider:
  name: aws
  runtime: nodejs10.x
  region: ap-northeast-1
  stage: ${opt:stage, 'local'}

  #
  # API Gateway configurations
  #
  # EDGE: Deploy API GW with cloudfront (default value)
  # REGIONAL: Deploy API GW without cloudfront
  # PRIVATE: Deploy private API GW (only accessible within VPC)
  endpointType: REGIONAL
  resourcePolicy:
    - Effect: Allow
      Principal: '*'
      Action: execute-api:Invoke
      Resource:
        - execute-api:/*
  apiKeys:
    - key_name # This will generate an api key on first deploy
  usagePlan:
    quota:
      limit: 500000
      period: MONTH
    throttle: # rq per second
      rateLimit: 5
      burstLimit: 10

  #
  # Lambda Configurations
  #
  memorySize: 256 # Default is 1024MB
  timeout: 4 # Default is 6 seconds (API Gateway maximum is 30)

  #
  # CloudWatch Loggings
  #
  logRetentionInDays: 14 # CloudWatch LogGroup retention period
  tracing:
    apiGateway: false
    lambda: false
  logs:
    restApi:
      accessLogging: false
      executionLogging: false # Configuration which enables or disables execution logging.
      fullExecutionData: false # Log rs/rq on error case (ex: non 2xx status codes)

  environment:
    SLACK_SIGNING_SECRET: ${self:custom.environment.slackSigningSecret}
    SLACK_API_TOKEN: ${self:custom.environment.slackApiToken}

functions:
  handleSlackMessage:
    handler: handler.handleSlackMessage
    events:
      - http:
          path: message
          method: post
          private: true # This makes API require apiKeys
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;참고로 &lt;a href=&quot;https://yaml.org/faq.html&quot;&gt;YAML 공식 웹사이트&lt;/a&gt;에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;.yaml&lt;/code&gt; 확장자를 추천하고 있지만, 전통적으로 확장자는 3글자를 사용해왔던 컨벤션 때문에 프로젝트에따라 &lt;code class=&quot;highlighter-rouge&quot;&gt;.yml&lt;/code&gt; 도 많이 사용되고 있습니다. 예를들어 쿠버네티스 설정파일의 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;.yaml&lt;/code&gt;을 사용하지만, serverless framework의 경우에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;.yml&lt;/code&gt;을 사용하는 것에 주의하세요.&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Feb 2020 00:00:00 +0900</pubDate>
        <link>/blog/developing-internal-service-with-serverless-aws/</link>
        <guid isPermaLink="true">/blog/developing-internal-service-with-serverless-aws/</guid>
        
        
        <category>Engineering</category>
        
      </item>
    
  </channel>
</rss>
